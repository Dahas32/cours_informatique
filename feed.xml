<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/cours_informatique/feed.xml" rel="self" type="application/atom+xml" /><link href="/cours_informatique/" rel="alternate" type="text/html" /><updated>2021-09-03T06:06:50+00:00</updated><id>/cours_informatique/feed.xml</id><title type="html">cours d’informatique</title><subtitle>Support de cours/td d'informatique à l'école centrale marseille.</subtitle><entry><title type="html">Nouvelle installation de son système</title><link href="/cours_informatique/tutos/systeme/installation/2021/09/01/installation-ordinateur.html" rel="alternate" type="text/html" title="Nouvelle installation de son système" /><published>2021-09-01T00:00:00+00:00</published><updated>2021-09-01T00:00:00+00:00</updated><id>/cours_informatique/tutos/systeme/installation/2021/09/01/installation-ordinateur</id><content type="html" xml:base="/cours_informatique/tutos/systeme/installation/2021/09/01/installation-ordinateur.html">&lt;p&gt;Comment bien préparer son ordinateur pour faire du développement. On ne montrera ici que le départ, c’est à dire l’installation fraiche d’un système sur lequel on pourra ensuite installer — proprement — les divers outils et logiciels utiles pour le développement.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Pouvoir développer des logiciels et exécuter ses propres programmes nécessite quelques connaissances et compétences.&lt;/p&gt;

&lt;p&gt;Rien d’insurmontable, mais si on ne le fait pas on a vite un système instable où rien de marche comme il faudrait.&lt;/p&gt;

&lt;p&gt;Il faut résister à la tentation de faire n’importe quoi en espérant que ça passe car, au bout du compte, on perd plus de temps à réparer qu’on en gagne à installer sans préparation.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Il est recommandé de partir d’un système propre est vierge. En effet, si quelque chose ne fonctionne pas c’est souvent parce qu’on a précédemment installé quelque chose d’incompatible en suivant sans comprendre un tuto de l’internet.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A la fin de ce tuto vous devez avoir :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;un système d’installation sain&lt;/li&gt;
  &lt;li&gt;un gestionnaire de package&lt;/li&gt;
  &lt;li&gt;un éditeur de texte&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;un-nouveau-compte&quot;&gt;Un nouveau compte&lt;/h2&gt;

&lt;p&gt;Si vous ne vous pouvez pas réinstaller un nouveau système, pour que tout se passe au mieux assurez vous que votre compte :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;soit un compte administrateur (pouvant exécuter sudo si vous êtes sous linux)&lt;/li&gt;
  &lt;li&gt;votre login ne doit contenir aucun espace, ni accent.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class=&quot;attention&quot;&gt;
  &lt;p&gt;le login est différent de votre nom.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;compte admin :  sans accent ni espace&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;administrateur sous windows/mac&lt;/li&gt;
  &lt;li&gt;pouvant exécuter sudo sous linux&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Il peut être utile d’avoir un compte uniquement pour travailler/développer et un autre pour jouer. Ceci évitera déjà les conflits de configuration.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;un-nouveau-système&quot;&gt;Un nouveau système&lt;/h2&gt;

&lt;p&gt;Il est souvent possible de réinstaller un nouveau système en conservant vos données. C’est souvent très pratique mais pour une première fois, je vous conseille de faire une installation sur un disque vierge, c’est à dire en ne &lt;strong&gt;conservant rien&lt;/strong&gt; de ce qu’il y avait sur votre disque dur.&lt;/p&gt;

&lt;p&gt;Installer un nouveau système nécessite de reformater votre disque dur. Avant cela il vous faut faire trois choses :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;sauvegardez vos données sur une clé pour que vous puissiez facilement les remettre sur votre nouveau système&lt;/li&gt;
  &lt;li&gt;vérifier les différentes applications actuellement installées et listez celles que vous voulez à nouveau installer.&lt;/li&gt;
  &lt;li&gt;lister les différents compte et mots de passe dont vous aurez besoin (wifi, steam, google, …)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Avec le cloud (&lt;a href=&quot;https://support.apple.com/fr-fr/guide/icloud/welcome/icloud&quot;&gt;icloud&lt;/a&gt; sur mac ou &lt;a href=&quot;https://www.microsoft.com/fr-fr/microsoft-365/onedrive/online-cloud-storage&quot;&gt;onedrive&lt;/a&gt; sous windows) les données personnelles sont souvent déjà sauvegardées. Mais il faut se souvenir du login/mot de passe pour réactiver le tout sur le nouveau système.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote class=&quot;attention&quot;&gt;
  &lt;p&gt;Notez votre wifi et son mot de passe, ou mieux connectez le réseau directement avec un fil si possible pour votre installation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;linux&quot;&gt;Linux&lt;/h3&gt;

&lt;details&gt;&lt;summary&gt;détails&lt;/summary&gt;&lt;div&gt;
&lt;blockquote class=&quot;note&quot;&gt;
  &lt;p&gt;TBD&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;h3 id=&quot;mac&quot;&gt;Mac&lt;/h3&gt;
&lt;details&gt;&lt;summary&gt;détails&lt;/summary&gt;&lt;div&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://support.apple.com/fr-fr/guide/mac-help/mchlp1599/mac&quot;&gt;https://support.apple.com/fr-fr/guide/mac-help/mchlp1599/mac&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Le plus simple est d’installer une nouvelle version du système en utilisant internet. Redémarrez votre ordinateur en maintenant enfoncé les touches :  &lt;em&gt;“Maj + Option + Commande + R enfoncées”&lt;/em&gt;&lt;/p&gt;

&lt;blockquote class=&quot;attention&quot;&gt;
  &lt;p&gt;Notez votre login et mot de passe icloud. Vous en aurez besoin à l’installation&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;finder&quot;&gt;finder&lt;/h4&gt;

&lt;p&gt;Le finder est l’outil principal qui vous permettra de naviguer dans les fichiers. Pour qu’il soit un peut plus facile d’y naviguer :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;menu présentation &amp;gt; personnaliser la barre d’outils…&lt;/em&gt; ajoutez le “chemin” (trois barres horizontales) aux outils du finder en le glissant/déposant.&lt;/li&gt;
  &lt;li&gt;ajoutez le dossier “&lt;em&gt;Départ&lt;/em&gt;”, aussi appelé “&lt;em&gt;maison&lt;/em&gt;” (le dossier principal de l’utilisateur) et le dossier “&lt;em&gt;applications&lt;/em&gt;” aux éléments à la gauche du finder. Pour cela, choisissez le dossier dans le menu &lt;em&gt;Aller&lt;/em&gt; puis  avec l’outils chemin que l’on vient d’ajouter sélectionnez le dossier parent(Par exemple pour la maison, le dossier parent est “Utilisateurs” et pour application, le dossier parent est “Macintosh HD”). Vous pouvez ensuite glisser/déposer le dossier à gauche du finder.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;terminal&quot;&gt;terminal&lt;/h4&gt;

&lt;p&gt;Le terminal va être un outil fondamental en développement. Ajoutez le aux icônes du finder. Il est dans le dossier Utilitaires de application.&lt;/p&gt;

&lt;h4 id=&quot;drivers&quot;&gt;drivers&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;imprimante&lt;/li&gt;
  &lt;li&gt;autres trucs bas niveau (icloud drive, tablette, …)&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;h3 id=&quot;windows&quot;&gt;Windows&lt;/h3&gt;

&lt;details&gt;&lt;summary&gt;détails&lt;/summary&gt;&lt;div&gt;
&lt;blockquote class=&quot;attention&quot;&gt;
  &lt;p&gt;Notez le numéro de série de votre windows 10. Vous en aurez besoin à l’installation&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On va suivre la procédure de &lt;a href=&quot;https://support.microsoft.com/fr-fr/windows/r%C3%A9installer-windows-d8369486-3e33-7d9c-dccc-859e2b022fc7#ID0EBD=Windows_10&quot;&gt;mirosoft&lt;/a&gt; en suivant les instructions de &lt;em&gt;Installer une nouvelle installation Windows 10 à l’aide d’un support d’installation&lt;/em&gt;.&lt;/p&gt;

&lt;h4 id=&quot;confidentialité&quot;&gt;confidentialité&lt;/h4&gt;

&lt;p&gt;Une fois l’installation terminée, allez dans &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Démarrer &amp;gt; Paramètres &amp;gt; Confidentialité&lt;/code&gt; et vérifier pour chaque onglet à gauche que les paramètres d’envoi de vos données vous satisfont.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Pour les paramètres de sécurité, vous pouvez toujours aller voir la &lt;a href=&quot;https://www.cnil.fr/fr/reglez-les-parametres-vie-privee-de-windows-10-apres-installation&quot;&gt;cnil&lt;/a&gt; ou &lt;a href=&quot;http://www.win10.fr/reglages-confidentialite-windows10&quot;&gt;ce site&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;compte&quot;&gt;compte&lt;/h4&gt;

&lt;p&gt;J’utilise un compte local et pas mon compte Microsoft pour me connecter. Assurez vous que le nom de votre compte ne contient aucun espace ou accent (on le voit avec l’explorateur de fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;c:\Utilisateurs&lt;/code&gt;) et que c’est un compte administrateur.&lt;/p&gt;

&lt;h4 id=&quot;windows-update&quot;&gt;Windows update&lt;/h4&gt;

&lt;p&gt;Vérifier que votre système est à jour en cliquant sur &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Démarrer &amp;gt; Paramètres &amp;gt; mise à jour et sécurité &amp;gt; Windows update&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;version-du-système&quot;&gt;Version du système&lt;/h4&gt;

&lt;p&gt;Pour connaître votre version : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Menu Démarrer &amp;gt; Paramètres &amp;gt; Système &amp;gt; information système&lt;/code&gt; Dans la partie Spécification de Windows.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Pour installer la wsl 2, il faut nécessairement avoir une version de w10 supérieure ou égale à la 2004.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;explorer&quot;&gt;explorer&lt;/h4&gt;

&lt;p&gt;Affichez les fichier caché dans l’explorateur de fichiers. Cela va être utile à de nombreuses reprises. Pour cela, ouvrez un explorateur de fichier puis choisissez affichage et cochez la case &lt;em&gt;Éléments masqués&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;drivers&quot;&gt;drivers&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;carte graphique&lt;/li&gt;
  &lt;li&gt;clavier/souris si nécessaire&lt;/li&gt;
  &lt;li&gt;imprimante&lt;/li&gt;
  &lt;li&gt;autres trucs bas niveau (icloud drive, tablette, …)&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;h2 id=&quot;applications-indispensables&quot;&gt;Applications indispensables&lt;/h2&gt;

&lt;h3 id=&quot;un-navigateur&quot;&gt;Un navigateur&lt;/h3&gt;

&lt;p&gt;Prenez celui de votre choix, personnellement j’utilise &lt;a href=&quot;https://www.google.com/intl/fr_fr/chrome/&quot;&gt;chrome&lt;/a&gt; que je mets en navigateur par défaut.&lt;/p&gt;

&lt;h3 id=&quot;un-éditeur-de-texte&quot;&gt;Un éditeur de texte&lt;/h3&gt;

&lt;p&gt;On en installera d’autres par la suite, mais il est toujours appréciable d’avoir un éditeur de texte sous la main pour modifier rapidement un fichier de conf.&lt;/p&gt;

&lt;p&gt;Selon le système d’exploitation, mon éditeur à tout faire est différent :&lt;/p&gt;

&lt;details&gt;&lt;summary&gt;Linux&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;Comme j’utilise linux essentiellement en ligne de commande, mon éditeur de choix est &lt;a href=&quot;https://www.vim.org/&quot;&gt;vim&lt;/a&gt;. Bon, il peut faire un peu peur mais si vous voulez faire de l’informatique votre métier et que vous devrez vous connecter sur des ordinateurs uni distant (un serveur web par exemple) connaitre vim est un gain de temps considérable.&lt;/p&gt;

&lt;p&gt;Sinon, pourquoi pas &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt; ?&lt;/p&gt;

&lt;/div&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;Mac&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;J’utilise &lt;a href=&quot;https://macromates.com/&quot;&gt;Textmate&lt;/a&gt;.&lt;/p&gt;

&lt;/div&gt;&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;Windows&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;J’utilise &lt;a href=&quot;https://notepad-plus-plus.org/downloads/&quot;&gt;notepad++&lt;/a&gt;.&lt;/p&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;h3 id=&quot;un-gestionnaire-de-package&quot;&gt;Un gestionnaire de package&lt;/h3&gt;

&lt;p&gt;N’installez &lt;strong&gt;RIEN&lt;/strong&gt; sans avoir un installeur de package qui vous permettra de savoir ce que vous avez installé et de mettre à jour le tout.&lt;/p&gt;

&lt;details&gt;&lt;summary&gt;Linux&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;Déjà installé par défaut. Cela dépend de votre distribution linux, mais c’est souvent 
&lt;a href=&quot;https://doc.ubuntu-fr.org/apt-get&quot;&gt;Apt-get&lt;/a&gt;. Donc rien à faire.&lt;/p&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;Mac&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;Pasz vraiment de choix, on installe &lt;a href=&quot;https://brew.sh/&quot;&gt;brew&lt;/a&gt; et plus vite que ça !&lt;/p&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;Windows&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;Comme j’installe que peu de choses sous windows, je n’utilise pas vraiment de gestionnaire de paquet dédié (ce qui est mal). Je laisse windows gérer le tout dans le menu application des paramètres.&lt;/p&gt;

&lt;p&gt;Il en existe plusieurs mais je ne sais pas trop le quel est le mieux. Trois alternatives a priori :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/fr-fr/windows/package-manager/winget/&quot;&gt;winget&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://chocolatey.org/&quot;&gt;chocolately&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://scoop.sh/&quot;&gt;scoop.sh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://nodachisoft.com/common/en/article/en000009/&quot;&gt;https://nodachisoft.com/common/en/article/en000009/&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;h3 id=&quot;outils-de-compression&quot;&gt;outils de compression&lt;/h3&gt;

&lt;details&gt;&lt;summary&gt;Linux&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;Surement déjà installé.&lt;/p&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;Windows&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;Surement déjà installé.&lt;/p&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;Windows&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;Il y en a plusieurs. &lt;a href=&quot;https://www.7-zip.org/&quot;&gt;7zip&lt;/a&gt; est simple d’utilisation et très complet.&lt;/p&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;h3 id=&quot;utilitaires-de-tous-les-jours&quot;&gt;utilitaires de tous les jours&lt;/h3&gt;

&lt;p&gt;Non indispensable mais que vous utilisez tous les jours&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;steam, gog, epic, battle.net, origin, uplay, etc&lt;/li&gt;
  &lt;li&gt;vlc, office 360&lt;/li&gt;
  &lt;li&gt;discord&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;</content><author><name>François Brucker</name></author><category term="installation" /><category term="système" /><category term="terminal" /><summary type="html">Comment bien préparer son ordinateur pour faire du développement. On ne montrera ici que le départ, c’est à dire l’installation fraiche d’un système sur lequel on pourra ensuite installer — proprement — les divers outils et logiciels utiles pour le développement.</summary></entry><entry><title type="html">Format markdown</title><link href="/cours_informatique/tutos/langage/markdown/2021/08/30/format-markdown.html" rel="alternate" type="text/html" title="Format markdown" /><published>2021-08-30T00:00:00+00:00</published><updated>2021-08-30T00:00:00+00:00</updated><id>/cours_informatique/tutos/langage/markdown/2021/08/30/format-markdown</id><content type="html" xml:base="/cours_informatique/tutos/langage/markdown/2021/08/30/format-markdown.html">&lt;p&gt;Une introduction au format markdown. C’est le langage que nous utiliserons majoritairement pour écrire les cours.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;quest-ce-&quot;&gt;Qu’est-ce ?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://fr.wikipedia.org/wiki/Markdown&quot;&gt;Markdown&lt;/a&gt; est un format de fichier texte, donc modifiable par tout éditeur de texte. L’extension de fichier est &lt;em&gt;“.md”&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Il est facilement lisible dans un éditeur de texte, et il existe de nombreuses façon de l’exporter que ce soit en html (pour l’ouvrir avec un navigateur comme chrome ou firefox) ou en pdf.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Tout ce site a par exemple été écrit en markdown puis transformé en html grâce à &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;jekyll&lt;/a&gt;. Le code source du site est &lt;a href=&quot;https://github.com/FrancoisBrucker/cours_informatique&quot;&gt;visible&lt;/a&gt;, en particulier le code source de &lt;a href=&quot;https://github.com/FrancoisBrucker/cours_informatique/blob/master/docs/tutos/_posts/2021-08-30-format-markdown.md&quot;&gt;ce fichier&lt;/a&gt; (cliquez sur le bouton &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;raw&lt;/code&gt; à droite, juste avant que le fichier ne soit représenté).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;syntaxe&quot;&gt;syntaxe&lt;/h2&gt;

&lt;p&gt;Markdown permet facilement d’écrire des titres, des liste, mettre des choses en exergue, etc.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Pour une introduction et une liste des possibilités offertes, n’hésitez pas à consulter le site : &lt;a href=&quot;https://www.markdownguide.org/&quot;&gt;https://www.markdownguide.org/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Le format markdown est basique. Il possède plein de variantes qui permettent d’étendre ses fonctionnalités. Les principales variantes utilisées sont :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;celle de &lt;a href=&quot;https://guides.github.com/features/mastering-markdown/&quot;&gt;github&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;le &lt;a href=&quot;https://kramdown.gettalong.org/documentation.html&quot;&gt;kramdown&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class=&quot;attention&quot;&gt;
  &lt;p&gt;Nous utilisons pour ce site le &lt;a href=&quot;https://kramdown.gettalong.org/documentation.html&quot;&gt;kramdown&lt;/a&gt; qui est une extension du markdown et est interprété pour le générateur desite statique &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;jekyll&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;markdown-avec-vscode&quot;&gt;markdown avec vscode&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://code.visualstudio.com/docs/languages/markdown&quot;&gt;https://code.visualstudio.com/docs/languages/markdown&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;extensions&quot;&gt;extensions&lt;/h3&gt;

&lt;p&gt;vscode possède de nombreux plugins markdown. qui facilitent l’écriture en markdown. On peut par exemple citer :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/yzhang-gh/vscode-markdown&quot;&gt;Markdown All in One&lt;/a&gt;. Dans les préférences du module, on décoche &lt;em&gt;Markdown &amp;gt; Extenstion &amp;gt; Math:Enabled&lt;/em&gt;. Les maths seront en effet utilisées avec le module suivant&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://learnbyexample.github.io/customizing-pandoc/&quot;&gt;markdownlint&lt;/a&gt; un linter pour écrire du joli markdown.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/goessner/mdmath&quot;&gt;Markdown+Math&lt;/a&gt; pour gérer les formules mathématiques comme :
    &lt;ul&gt;
      &lt;li&gt;
\[\frac{1}{2}\]
      &lt;/li&gt;
      &lt;li&gt;
\[\sum_{i=1}^n i^2\]
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shd101wyy.github.io/markdown-preview-enhanced/#/&quot;&gt;Markdown Preview Enhanced&lt;/a&gt;. Permet d’avoir des feuilles de styles jolies lorsque l’on converti du markdown.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;export-et-preview&quot;&gt;export et preview&lt;/h3&gt;

&lt;p&gt;Pour exporter le markdwon dans quelque chose de plus joli :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;pour compiler : &lt;em&gt;ctrl/cmd + shift + p : markdown All in One: Print current document to HTML&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;pour faire une preview : &lt;em&gt;ctrl/cmd + shift + p : markdown: Open preview&lt;/em&gt; Mais cela n’utilise pas l’extension Markdown Preview Enhanced, c’est donc plus limité comme rendu.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;formules-mathématiques&quot;&gt;Formules mathématiques&lt;/h2&gt;

&lt;p&gt;Lorsque l’on écrit des textes scientifique, vient inévitablement la question de l’écriture des équations. Le langage &lt;a href=&quot;https://fr.wikipedia.org/wiki/LaTeX&quot;&gt;Latex&lt;/a&gt; permet d’écrire toutes les équations imaginable (et même plus) avec un petit langage que l’on peut utiliser directement dans un éditeur de texte (ceux qui ont déjà utilisé l’éditeur d’équation de Word savent que c’est l’enfer de devoir tout cliquer). Une fois ce langage appris, il est étonnement clair, même non compilé en &lt;em&gt;jolies formules&lt;/em&gt;. Avec un peut d’habitude, on voit bien que : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$$\cos x=\sum_{k=0}^{\infty}\frac{(-1)^k}{(2k)!}x^{2k}$$&lt;/code&gt; est égal à :&lt;/p&gt;

\[\cos x=\sum_{k=0}^{\infty}\frac{(-1)^k}{(2k)!}x^{2k}\]

&lt;p&gt;En markdown, on ne peut pas écrire tout en Latex (autant utiliser latex dans ce cas…) seulement ses équations, c’est à dire des mathématiques écrites entre &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt; (pour une équation dans le flux du texte) ou &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$$&lt;/code&gt; (pour une équation avec un saut de ligne avant et après celle-ci).&lt;/p&gt;

&lt;p&gt;Quelques aides :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Un &lt;a href=&quot;http://tug.ctan.org/info/undergradmath/undergradmath.pdf&quot;&gt;résumé&lt;/a&gt; des possibibités&lt;/li&gt;
  &lt;li&gt;un &lt;a href=&quot;https://www.science-emergence.com/Articles/Formules-math%C3%A9matiques-sous-LaTeX/&quot;&gt;tuto&lt;/a&gt; Latex contenant aussi des instructions pour les équations.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Pour le markdown, il faudra  utiliser  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$$&lt;/code&gt;et &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt; (les notation Tex) plutôt que &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\[&lt;/code&gt; et  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\(&lt;/code&gt; (notations latex).&lt;/li&gt;
    &lt;li&gt;Lorsque vous faites de l’exportation en html, les mathématiques sont représentées en utilisant &lt;a href=&quot;https://www.mathjax.org/&quot;&gt;Mathjax&lt;/a&gt; (voir &lt;a href=&quot;ttps://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference&quot;&gt;une aide&lt;/a&gt; de mathjax)&lt;/li&gt;
    &lt;li&gt;L’ancêtre de &lt;a href=&quot;https://fr.wikipedia.org/wiki/LaTeX&quot;&gt;Latex&lt;/a&gt; : &lt;a href=&quot;https://fr.wikipedia.org/wiki/TeX&quot;&gt;Tex&lt;/a&gt;, a été créé par le célèbre informaticien &lt;a href=&quot;https://fr.wikipedia.org/wiki/Donald_Knuth&quot;&gt;Donald Knuth&lt;/a&gt; par ce qu’il n’existait rien sur ordinateur à l’époque pour écrire &lt;a href=&quot;https://fr.wikipedia.org/wiki/The_Art_of_Computer_Programming&quot;&gt;ses livres&lt;/a&gt; en respectant une typographie correcte.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;blockquote class=&quot;attention&quot;&gt;
  &lt;p&gt;Il ne faut pas mettre d’espace après le premier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt; et avant le dernier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt; sinon, pandoc ne reconnaîtra pas que ce sont des équations que vous voulez écrire. Ansi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ \frac{1}{2}$&lt;/code&gt; affichera &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ \frac{1}{2}$&lt;/code&gt;, alors que &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$\frac{1}{2}$&lt;/code&gt; affichera $\frac{1}{2}$.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;export&quot;&gt;export&lt;/h2&gt;

&lt;p&gt;Si le markdown est pratique pour être écrit et lu rapidement, pour de long documents ou le partage de ceux-ci, il est important de les exporter dans un format plus :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;imprimable comme le pdf ou l’html&lt;/li&gt;
  &lt;li&gt;modifiable comme un docx ou un fichier latex&lt;/li&gt;
  &lt;li&gt;un autre format que l’on aime.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;export-simple&quot;&gt;export simple&lt;/h3&gt;

&lt;p&gt;Avec les extension que l’on a installé, il est déjà possible d’exporter le markdown en html, puis — via un navigateur — de l’exporter en pdf. Voir partie &lt;a href=&quot;#export-et-preview&quot;&gt;export et preview&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Cela suffit pour la majorité des cas. Si l’on veut exporter dans des formats plus exotique ou encore finement contrôler le résultat de l’export, il faut utiliser des logiciel plus complexe, comme &lt;a href=&quot;https://pandoc.org/&quot;&gt;pandoc&lt;/a&gt; dont le boulot est de convertir à peut prêt n’importe quel format en un (quelconque) autre  format.&lt;/p&gt;

&lt;h3 id=&quot;utilitaire-pandoc&quot;&gt;utilitaire pandoc&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://pandoc.org/&quot;&gt;pandoc&lt;/a&gt; est un monstre. Il permet (parfois avec un peu d’huile de coude il est vrai) de convertir à peut prêt tout document en un autre format (voir les &lt;a href=&quot;https://pandoc.org/demos.html&quot;&gt;démos&lt;/a&gt; pour différentes conversions).&lt;/p&gt;

&lt;h4 id=&quot;installation-de-pandoc&quot;&gt;Installation de pandoc&lt;/h4&gt;

&lt;p&gt;D’après la &lt;a href=&quot;https://pandoc.org/installing.html&quot;&gt;doc&lt;/a&gt;, selon le système d’exploitation :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Linux : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt install pandoc&lt;/code&gt; dans un terminal&lt;/li&gt;
  &lt;li&gt;Mac : installez &lt;a href=&quot;https://brew.sh/&quot;&gt;brew&lt;/a&gt; puis &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;brew install pandoc&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Windows : installez &lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatly&lt;/a&gt; puis &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;choco install pandoc&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Selon le format d’export, il vous faudra d’autres logiciels. Je vous conseille d’ores et déjà d’&lt;a href=&quot;https://www.latex-project.org/get/&quot;&gt;installer latex&lt;/a&gt; pour pouvoir facilement exporter en pdf sans passer par html et un navigateur.&lt;/p&gt;

&lt;h4 id=&quot;exemple-dutilisation--en-html&quot;&gt;exemple d’utilisation : en html&lt;/h4&gt;

&lt;p&gt;Pour l’export en html, j’utilise la commande suivante qui m’écrit de jolies équations avec &lt;a href=&quot;https://www.mathjax.org/&quot;&gt;https://www.mathjax.org/&lt;/a&gt; : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pandoc --mathjax --standalone --metadata pagetitle=&quot;titre page&quot; --metadata charset=&quot;UTF-8&quot;  page.md -o page.html&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;premier élément : le nom de la commande, ici &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pandoc&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;cette commande prend en entrée le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;page.md&lt;/code&gt; qui est le dernier élément de la ligne&lt;/li&gt;
  &lt;li&gt;les autres éléments de la lignes sont des &lt;a href=&quot;https://fr.wikipedia.org/wiki/Commandes_Unix#Le_passage_d'arguments_aux_commandes&quot;&gt;arguments&lt;/a&gt;. Dans le monde des commandes, il y a deux types de paramètres “un &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-&lt;/code&gt; suivit d’une lettre” et “deux &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--&lt;/code&gt; suivi d’un mot” Ces paramètre peuvent être suivi d’arguments, c’est à dire des mots ne commençant pas par un &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-o page.html&lt;/code&gt;), ou pas (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--mathjax&lt;/code&gt;) Notre commande a 4 paramètres :
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-o page.html&lt;/code&gt;. &lt;em&gt;Un paramètre avec un argument&lt;/em&gt;. Le fichier se sorti s’appellera &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;page.html&lt;/code&gt;. Il determine le type de sortie (ici de l’html) et sera dans le même dossier que le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;page.md&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--mathjax&lt;/code&gt;. &lt;em&gt;Un paramètre sans argument&lt;/em&gt;. On utilise la bibliothèque mathjax pour &lt;em&gt;compiler&lt;/em&gt; les équations latex&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--standalone&lt;/code&gt;. &lt;em&gt;Un paramètre sans argument&lt;/em&gt;. On crée un fichier html complet (par défaut, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pandoc&lt;/code&gt; ne crée qu’un bout de html qui peut être combiner avec d’autres bout)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--metadata pagetitle=&quot;titre page&quot;&lt;/code&gt;. &lt;em&gt;Un paramètre avec un argument&lt;/em&gt;. En combinaison avec le paramètre &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;standalone&lt;/code&gt;. Permet de donner un titre à la page html, ici “titre page”.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--metadata charset=&quot;UTF-8&quot;&lt;/code&gt;. &lt;em&gt;Un paramètre avec un argument&lt;/em&gt;. Permet de spécifier l’encodage des caractères (voir cours sur les fichiers). Devrait permettre de voir les accents.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Si vous avez à compiler plein de fois votre page, n’oubliez pas qu’utiliser la &lt;em&gt;flèche du haut&lt;/em&gt; dans un terminal rappelle la dernière commande utilisée. Donc même une commande avec plein de paramètres est facile à réutiliser. Il suffit d’appuyer sur la flèche du haut.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lorsque je fais mes tests en html, après chaque re-compilation je recharge la page avec &lt;em&gt;“F5”&lt;/em&gt; ou &lt;em&gt;“ctrl+R”&lt;/em&gt; dans le navigateur. Le process est &lt;strong&gt;très rapide&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;misc&quot;&gt;misc&lt;/h2&gt;

&lt;p&gt;Quelques liens potentiellement intéressant :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;pimp my markdown dans vsc : &lt;a href=&quot;https://medium.com/@pierrepaci/enhance-your-markdown-experience-using-vscode-3caf489888b8&quot;&gt;https://medium.com/@pierrepaci/enhance-your-markdown-experience-using-vscode-3caf489888b8&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;pimp my pandoc : &lt;a href=&quot;https://learnbyexample.github.io/customizing-pandoc/&quot;&gt;https://learnbyexample.github.io/customizing-pandoc/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="tutos" /><category term="langage" /><category term="markdown" /><category term="informatique" /><category term="cours" /><summary type="html">Une introduction au format markdown. C’est le langage que nous utiliserons majoritairement pour écrire les cours.</summary></entry><entry><title type="html">Configuration Pycharm</title><link href="/cours_informatique/tutos/editeur/pycharm/2021/08/30/configuration-pycharm.html" rel="alternate" type="text/html" title="Configuration Pycharm" /><published>2021-08-30T00:00:00+00:00</published><updated>2021-08-30T00:00:00+00:00</updated><id>/cours_informatique/tutos/editeur/pycharm/2021/08/30/configuration-pycharm</id><content type="html" xml:base="/cours_informatique/tutos/editeur/pycharm/2021/08/30/configuration-pycharm.html">&lt;p&gt;Le but de ce tutoriel est d’installer une distribution python avec &lt;a href=&quot;https://www.anaconda.com/&quot;&gt;anaconda&lt;/a&gt; et l’IDE &lt;a href=&quot;https://www.jetbrains.com/fr-fr/pycharm/&quot;&gt;pycharm&lt;/a&gt;. On suppose que vous avez déjà installé une distribution python avec anaconda.&lt;/p&gt;

&lt;h2 id=&quot;pycharm&quot;&gt;pycharm&lt;/h2&gt;

&lt;p&gt;Commencez par &lt;a href=&quot;https://www.jetbrains.com/fr-fr/pycharm/download&quot;&gt;télécharger&lt;/a&gt; la version professionnels de &lt;em&gt;pycharm&lt;/em&gt;. En temps qu’étudiant vous avez droit à une licence gratuite pendant 1an (renouvelable temps que vous êtes étudiant). Puis installez le logiciel.&lt;/p&gt;

&lt;h3 id=&quot;lier-anaconda-et-pycharm&quot;&gt;lier anaconda et pycharm&lt;/h3&gt;

&lt;p&gt;Lorsque vous lancez &lt;em&gt;pycharm&lt;/em&gt; une fenêtre de choix apparaît.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Créez un nouveau projet&lt;/li&gt;
  &lt;li&gt;une fenêtre apparaît, vous demandant quel type de projet vous voulez faire. Choisissez &lt;em&gt;pure Python&lt;/em&gt; et à droite :
    &lt;ul&gt;
      &lt;li&gt;choisissez un dossier où vous mettrez votre projet&lt;/li&gt;
      &lt;li&gt;décochez la case &lt;em&gt;“Create a main.py welcome script”&lt;/em&gt;&lt;/li&gt;
      &lt;li&gt;cliquez sur le triangle pour étendre la partie consacrée à l’interpréteur.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Dans la partie dédiée à l’interpréteur, vous voyez plusieurs choix. Nous allons utiliser un interpréteur existant (choisissez cette option) en cherchant le python d’anaconda. Pour cela :
    &lt;ul&gt;
      &lt;li&gt;cliquez sur les &lt;em&gt;“…”&lt;/em&gt; à droite de la ligne de choix de l’interpréteur,&lt;/li&gt;
      &lt;li&gt;dans la nouvelle fenêtre, choisissez &lt;em&gt;Conda Environnement&lt;/em&gt;. Il faut maintenant savoir où vous avez installé anaconda. En trouvant où se trouve votre interpréteur (voir &lt;a href=&quot;#anaconda-avec-un-terminal&quot;&gt;partie précédente&lt;/a&gt;) vous trouverez où se trouve anaconda&lt;/li&gt;
      &lt;li&gt;On a trois choses à faire : trouver l’interpréteur python, l’éxécutable anaconda et faire en sorte que pycharm se rappelle de tout ça.&lt;/li&gt;
      &lt;li&gt;interpréteur python. Il suffit de suivre &lt;a href=&quot;#anaconda-avec-un-terminal&quot;&gt;cette partie&lt;/a&gt;. Pour mon mac &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;which python3&lt;/code&gt; me rend : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/anaconda3/bin/python3&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;l’exécutable conda : c’est le début du chemin de l’interpréteur, jusqu’à &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;anaconda3&lt;/code&gt;. (pour mon mac, à partir de la ligne précédente, j’en débuit qu’anaconda est dans le dossier : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/anaconda3/&lt;/code&gt;)&lt;/li&gt;
      &lt;li&gt;cochez la case &lt;em&gt;Make avaliable to all projects&lt;/em&gt; pour que vous puissiez retrouver cet environnement à chaque nouveau projet.&lt;/li&gt;
      &lt;li&gt;cliquez sur le bouton &lt;em&gt;OK&lt;/em&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;cliquez sur le bouton &lt;em&gt;Create&lt;/em&gt; pour créer le projet avec notre nouvel environnement conda.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Une nouvelle fenêtre apparaît avec votre projet.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Il se peut que pycharm ne réponde pas bien au début. C’est normal, il est entrain d’analyser votre tout nouvel interpréteur python. Vous voyez une barre de progression en bas à droite qui vous indique ce qu’il fait. Laissez le finir d’indexer tout ça, cela peut durer un certain temps (surtout qu’anaconda a déjà plein de bibliothèque d’installées), mais il ne le fait que lorsque vous changez d’interpréteur.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Notre premier projet avec pycharm :&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;créons un fichier &lt;em&gt;“file &amp;gt; new… &amp;gt; python file”&lt;/em&gt; et appelons le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.py&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;à gauche de la fenêtre vous voyez les différents fichiers et à droite des fichiers. Pour l’instant nous n’en avons qu’un seul et il est vide.&lt;/li&gt;
  &lt;li&gt;écrivez &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print(&quot;Hello World&quot;)&lt;/code&gt; dans le fichier. Vous n’avez pas à vous préoccuper de sauver, &lt;em&gt;pycharm&lt;/em&gt; le fait automatiquement.&lt;/li&gt;
  &lt;li&gt;exécuter votre code en allant dans le menu &lt;em&gt;Run &amp;gt; Run…&lt;/em&gt;, une petite fenêtre s’affiche et choisissez &lt;em&gt;main.py&lt;/em&gt;, c’est le fichier qui sera exécuté.&lt;/li&gt;
  &lt;li&gt;Regardez la fenêtre du bas de &lt;em&gt;pycharm&lt;/em&gt; où vous voyez le résultat de votre programme.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Vous voyez maintenant en haut à droite de la fenêtre un endroit où est écrit &lt;em&gt;main&lt;/em&gt; et à droite un petit triangle vert. Si vous glissez votre souris sur ce triangle vert vous voyez son raccourci clavier (sur mac c’est &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ctrl + R&lt;/code&gt;). Vous pouvez être n’importe où dans Pycharm, en particulier sur d’autres fichiers, si vous cliquez sur le triangle vert ou si vous utilisez le raccourci clavier (qui correspond au menu &lt;em&gt;Run &amp;gt; Run&lt;/em&gt;, sans les “…”), le fichier main sera exécuté.&lt;/p&gt;

&lt;p&gt;Cela correspond à une configuration d’exécution. Ici &lt;em&gt;main&lt;/em&gt; est le nom de la configuration d’exécution courante. On peut bien sur en créer d’autres, c’est ce qu’on fera lorsque l’on exécutera des tests, par exemple.&lt;/p&gt;

&lt;h3 id=&quot;propriétés-de-pycharm&quot;&gt;Propriétés de pycharm&lt;/h3&gt;

&lt;h4 id=&quot;aide-en-ligne&quot;&gt;aide en ligne&lt;/h4&gt;

&lt;p&gt;PyCharm est un éditeur professionnel, c’est normal que la prise en main soit plus complexe qu’avec un éditeur moins performant (comme notepad++ voir Sublime Text) ou scolaire (comme Spyder). En revanche, bien l’utiliser permet d’une part des gains de productivité importants et d’autre part de coder plus agréablement.&lt;/p&gt;

&lt;p&gt;Le système d’aide de PyCharm est très complet et vous permet de vous familiariser mieux avec la bête. Il est disponible sur le site de l’éditeur : &lt;a href=&quot;https://www.jetbrains.com/help/pycharm/meet-pycharm.html&quot;&gt;aide Pycharm&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;configurations-dexécution&quot;&gt;configurations d’exécution&lt;/h4&gt;

&lt;p&gt;Les configurations d’exécutions permettent d’exécuter des programmes ou des tests python. On les trouve soit grâce au menu &lt;em&gt;Run &amp;gt; edit configurations…&lt;/em&gt;, ou en haut à droite de la fenêtre en cliquant sur le nom de la configuration courante (le nom à gauche du petit triangle vert).&lt;/p&gt;

&lt;p&gt;Pour créer un nouvel environnement d’exécution :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ouvrez la fenêtre des contextes d’exécution dans le menu &lt;em&gt;Run &amp;gt; Edit configurations…&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;La fenêtre qui s’est ouverte contient tous les contextes d’exécution de votre projet. Cliquez sur le &lt;em&gt;+&lt;/em&gt; en haut à gauche de la fenêtre pour en créer un nouveau.&lt;/li&gt;
  &lt;li&gt;Choisissez &lt;em&gt;python&lt;/em&gt; si vous voulez exécuter du code ou &lt;em&gt;python tests&lt;/em&gt; pour un framework de test. Paramétrez votre environnement en choisissant le script à exécuter (on pourra également nommer son environnement).&lt;/li&gt;
  &lt;li&gt;Cliquez sur &lt;em&gt;OK&lt;/em&gt; pour créer l’environnement.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class=&quot;attention&quot;&gt;
  &lt;p&gt;Dans la fenêtre de gestion des contextes, ne modifiez pas les contextes par défaut. Ce sont des templates.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pour plus d’informations, reportez vous à &lt;a href=&quot;https://www.jetbrains.com/help/pycharm/2016.3/working-with-run-debug-configurations.html?search=run&quot;&gt;la documentation de pycharm&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;linterpréteur-python-dun-projet-pycharm&quot;&gt;L’interpréteur python d’un projet pycharm&lt;/h4&gt;

&lt;p&gt;Les préférences de pycharm sont accessibles via le menu &lt;em&gt;File &amp;gt; Settings…&lt;/em&gt;. La fenêtre de préférences ressemble à ça :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/cours_informatique/assets/tutos/pycharm/settings/settings.jpg&quot; alt=&quot;un projet vide&quot; style=&quot;margin: auto;display: block;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On peut quasiment tout changer, de l’apparence à l’interpréteur en passant par les raccourcis clavier.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;En haut à gauche se trouve un champ texte. Il permet de réduire les préférences à celles contenant le texte tapé (voir image ci-après).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;L’interpréteur du projet se trouve dans la partie &lt;em&gt;Project&lt;/em&gt; de la fenêtre des préférences.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/cours_informatique/assets/tutos/pycharm/settings/interpreter.jpg&quot; alt=&quot;l'interpréteur&quot; style=&quot;margin: auto;display: block;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pour créer un nouvel interpréteur à partir de la fenêtre de l’interpréteur, il suffit de cliquer sur l’engrenage dans la partie réservée à l’interpréteur :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/cours_informatique/assets/tutos/pycharm/settings/engrenage.png&quot; alt=&quot;engrenage&quot; style=&quot;margin: auto;display: block;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si l’on veut ajouter un programme python déjà présent sur la machine, on choisit &lt;em&gt;Add…&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Une nouvelle fenêtre s’affiche, qui doit ressembler à ça :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/cours_informatique/assets/tutos/pycharm/settings/nouvel_interpreteur_venv.png&quot; alt=&quot;ajout d'un interpréteur&quot; style=&quot;margin: auto;display: block;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Attention, par défaut &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;virtualenv environment&lt;/code&gt; (en haut à gauche de la fenêtre) est utilisé. Dans l’absolu &lt;a href=&quot;http://sametmax.com/les-environnement-virtuels-python-virtualenv-et-virtualenvwrapper/&quot;&gt;c’est très bien&lt;/a&gt;, mais pour nous, ça va plus nous embêter qu’autre chose (en particulier il faudrait réinstaller numpy à chaque tp…). On choisi donc &lt;em&gt;Conda Environment&lt;/em&gt; ou &lt;em&gt;system interpréteur&lt;/em&gt;  et un python 3 d’installé :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/cours_informatique/assets/tutos/pycharm/settings/interpreteur_python.png&quot; alt=&quot;interpréteur python&quot; style=&quot;margin: auto;display: block;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dans l’image ci-dessus, mon interpréteur python3 (python3.6) était dans le dossier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/local/bin&lt;/code&gt; (ce qui est souvent le cas dans le monde unix ou mac)&lt;/p&gt;

&lt;h4 id=&quot;installer-des-modules&quot;&gt;Installer des modules&lt;/h4&gt;

&lt;p&gt;On commence par aller trouver son interpréteur via le menu &lt;em&gt;File &amp;gt; Settings…&lt;/em&gt; (je l’ai trouvé en tapant &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;interp&lt;/code&gt; dans l’onglet de recherche) :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/cours_informatique/assets/tutos/pycharm/settings/interpreteur_par_recherche.png&quot; alt=&quot;interpréteur par recherche&quot; style=&quot;margin: auto;display: block;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Les packages installé sont listé dans la fenêtre, avec le numéro de version installé et la dernère version disponible. Pour installer le package &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;numpy&lt;/code&gt; on commence par cliquer sur le bouton &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+&lt;/code&gt; en bas à gauche de la fenêtre. Un zillion de package sont disponible. On cherche numpy :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/cours_informatique/assets/tutos/pycharm/settings/package_numpy.png&quot; alt=&quot;package numpy&quot; style=&quot;margin: auto;display: block;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On peut ensuite cliquer sur &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;install package&lt;/code&gt; en bas à gauche pour installer le package.&lt;/p&gt;

&lt;h4 id=&quot;les-raccourcis-claviers&quot;&gt;Les raccourcis claviers&lt;/h4&gt;

&lt;p&gt;De nombreuses actions disponibles via un menu dans pycharm possèdent un raccourci clavier.&lt;/p&gt;

&lt;p&gt;Par exemple, sous unix :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Commenter une ligne ou un bloc : &lt;em&gt;ctrl + /&lt;/em&gt; (Utiliser la touche &lt;em&gt;/&lt;/em&gt; du pavé numérique)&lt;/li&gt;
  &lt;li&gt;Rechercher : &lt;em&gt;ctrl + F&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Exécuter la configuration d’exécution courante : &lt;em&gt;shift + F10&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;L’utilisation des raccourcis clavier est décrite dans  l’aide en ligne de pycharm sur les &lt;a href=&quot;https://www.jetbrains.com/help/pycharm/keymap.html&quot;&gt;keymap&lt;/a&gt;.
Si une commande possède un raccourci clavier, il est montré à droite de son nom :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/cours_informatique/assets/tutos/pycharm/keymap/raccourci_clavier.png&quot; alt=&quot;commande rename&quot; style=&quot;margin: auto;display: block;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;L’image ci-dessus montre la commande &lt;em&gt;Rename&lt;/em&gt; et son raccourci clavier &lt;em&gt;shift + F6&lt;/em&gt; (cette commande est très très utile et vous l’utiliserez souvent car elle permet de renommer n’importe quoi. Le nom est modifié dans tout le fichier et dans d’autres fichiers du même projet).&lt;/p&gt;

&lt;p&gt;Selon la plateforme, les raccourcis par défaut changent :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://resources.jetbrains.com/storage/products/pycharm/docs/PyCharm_ReferenceCard.pdf&quot;&gt;Raccourcis par défaut unix&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://resources.jetbrains.com/storage/products/pycharm/docs/PyCharm_ReferenceCard_mac.pdf&quot;&gt;Raccourcis par défaut mac&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tous les raccourcis sont disponibles dans les préférences (menu &lt;em&gt;File &amp;gt; Settings…&lt;/em&gt;) dans la partie keymap :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/cours_informatique/assets/tutos/pycharm/keymap/keymap_settings.jpg&quot; alt=&quot;raccourcis claviers&quot; style=&quot;margin: auto;display: block;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Le raccourci clavier pour commenter automatiquement une ligne ou une partie de texte sélectionné par défaut de Pycharm n’est pas fonctionnel avec un clavier Français.&lt;/p&gt;

&lt;p&gt;Le raccourci concerne les commentaires : &lt;em&gt;comment&lt;/em&gt; en anglais. Pour trouver rapidement les raccourcis on tape donc &lt;em&gt;comment&lt;/em&gt; dans la barre de recherche de la partie &lt;em&gt;keymap&lt;/em&gt; de la fenêtre des paramètres :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/cours_informatique/assets/tutos/pycharm/keymap/keymap_comment.jpg&quot; alt=&quot;raccourcis comments&quot; style=&quot;margin: auto;display: block;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Il y a 2 types de commentaires : commentaire d’une ligne et d’un bloc de texte. Certains langages utilisent ces deux types de commentaires (le C++ ou le Java par exemple), mais pas python puisqu’il suffit de mettre un &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt; devant la ligne à commenter. Nous n’aurons à modifier que le raccourci : &lt;em&gt;Comment with Line Comment&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Dans de nombreux éditeurs, ce raccourci est sur &lt;em&gt;ctrl + /&lt;/em&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;//&lt;/code&gt; est le commentaire de ligne de nombreux langages comme le javascript, Java, C++, …). C’est ce que pense faire Pycharm, et ceci marche avec un clavier Américain. Le clavier Français a la touche &lt;em&gt;/&lt;/em&gt; comme modificateur de la touche &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:&lt;/code&gt;, ce qui confuse python.&lt;/p&gt;

&lt;p&gt;Ajoutons donc le raccourci clavier qui consiste à taper simultanément sur &lt;em&gt;ctrl&lt;/em&gt;, &lt;em&gt;shift&lt;/em&gt; et &lt;em&gt;:&lt;/em&gt;, c’est à dire la combinaison : &lt;em&gt;ctrl + shift + :&lt;/em&gt; (sur mac, vous pouvez remplacer &lt;em&gt;ctrl&lt;/em&gt; par &lt;em&gt;cmd&lt;/em&gt; qui correspond mieux à l’usage courant sur cette plateforme).&lt;/p&gt;

&lt;p&gt;Après avoir double cliqué sur la ligne &lt;em&gt;Comment with Line Comment&lt;/em&gt; et choisi d’ajouter un raccourci clavier, effectuez la combinaison de touche puis cliquez sur &lt;em&gt;Ok&lt;/em&gt; (appuyer sur &lt;em&gt;Entrée&lt;/em&gt; change le raccourci…) :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/cours_informatique/assets/tutos/pycharm/keymap/keymap_shortcut.jpg&quot; alt=&quot;changement de raccourcis comments&quot; style=&quot;margin: auto;display: block;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Le raccourci est alors ajouté :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/cours_informatique/assets/tutos/pycharm/keymap/keymap_result.jpg&quot; alt=&quot;raccourcis comments ajouté&quot; style=&quot;margin: auto;display: block;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Testez le !&lt;/p&gt;</content><author><name></name></author><category term="pycharm" /><category term="python" /><category term="anaconda" /><summary type="html">Le but de ce tutoriel est d’installer une distribution python avec anaconda et l’IDE pycharm. On suppose que vous avez déjà installé une distribution python avec anaconda.</summary></entry><entry><title type="html">naviguer dans un système de fichiers</title><link href="/cours_informatique/tutos/systeme/fichiers/2021/08/24/fichiers-navigation.html" rel="alternate" type="text/html" title="naviguer dans un système de fichiers" /><published>2021-08-24T00:00:00+00:00</published><updated>2021-08-24T00:00:00+00:00</updated><id>/cours_informatique/tutos/systeme/fichiers/2021/08/24/fichiers-navigation</id><content type="html" xml:base="/cours_informatique/tutos/systeme/fichiers/2021/08/24/fichiers-navigation.html">&lt;p&gt;Qu’est-ce qu’un fichier ? Un dossier ? Comment naviguer dans un système de fichier avec le terminal ou l’explorateur de fichier.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;système-de-fichier&quot;&gt;système de fichier&lt;/h2&gt;

&lt;p&gt;Votre ordinateur est composé de fichiers et de dossiers (aussi appelé répertoire) :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;un &lt;strong&gt;dossier&lt;/strong&gt; est un conteneur qui peut contenir soit d’autres dossier, soit des fichiers&lt;/li&gt;
  &lt;li&gt;un &lt;strong&gt;fichier&lt;/strong&gt; est ce que vous pouvez utiliser. C’est une image, du texte, ou encore un programme.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Il existe un dossier spécial, appelé &lt;em&gt;racine&lt;/em&gt; qui est le départ : on peut atteindre tous les fichiers/dossiers de votre ordinateur à partir de celui-ci.&lt;/p&gt;

&lt;p&gt;Cette organisation est appelée &lt;a href=&quot;https://fr.wikipedia.org/wiki/R%C3%A9pertoire_(informatique)&quot;&gt;arborescence de fichiers&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;exploration-de-larborescence&quot;&gt;exploration de l’arborescence&lt;/h3&gt;

&lt;p&gt;Ouvre une fenêtre de l’explorateur de fichier et placez vous à la racine de votre système de fichier.&lt;/p&gt;

&lt;details&gt;&lt;summary&gt;sous mac&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;Ouvrez une nouvelle fenêtre du &lt;em&gt;Finder&lt;/em&gt; et choisissez &lt;a href=&quot;https://support.apple.com/fr-fr/HT201732&quot;&gt;le mode d’affichage des fichiers&lt;/a&gt;) en colonne. Ensuite, choisissez dans le menu : &lt;em&gt;aller &amp;gt; ordinateur&lt;/em&gt; et cliquez sur &lt;em&gt;“Macintosh HD”&lt;/em&gt;, qui est la racine de votre système de fichier.&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;sous windows&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;on voit le chemin sur la barre du chemin (si c’est pas un dossier spécial)&lt;/p&gt;

&lt;blockquote class=&quot;note&quot;&gt;
  &lt;p&gt;TBD&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;sous unix&lt;/summary&gt;&lt;div&gt;
&lt;blockquote class=&quot;danger&quot;&gt;
  &lt;p&gt;TBD&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;p&gt;Vous pourrez ensuite naviguer de dossiers en dossiers, jusqu’à arriver à un fichier d’où vous ne pourrez plus avancer.&lt;/p&gt;

&lt;p&gt;Dans l’exemple ci-après, j’ai navigué sur mon mac jusqu’à ma photo d’&lt;a href=&quot;https://fr.wikipedia.org/wiki/Ada_Lovelace&quot;&gt;Ada Lovelace&lt;/a&gt; :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/cours_informatique/assets/tutos/fichiers-navigation/chemin-vers-ada.png&quot; alt=&quot;chemin vers le fichier ada_lovelace&quot; style=&quot;margin: auto;display: block;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On voit bien le chemin parcouru de la racine (appelé &lt;em&gt;“Macintosh HD”&lt;/em&gt; sur un mac et le fichier).&lt;/p&gt;

&lt;blockquote class=&quot;attention&quot;&gt;
  &lt;p&gt;Le nom des dossiers sur le disque dur et celui qui apparait dans l’explorateur de fichier peuvent être différent selon la langue du système d’exploitiation. 
Ainsi, le nom &lt;em&gt;Bureau&lt;/em&gt; dans l’explorateur correspondra au dossier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Desktop&lt;/code&gt; sur le disque dur…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;chemin&quot;&gt;chemin&lt;/h3&gt;

&lt;p&gt;Le chemin vers un fichier depuis la racine s’écrit en séparant tous les dossiers parcourus par un &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt;. Dans l’image de la navigation vers Ada Lovelace, son chemin est :&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/Users/fbrucker/Desktop/ada_lovelace.png 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tout fichier ou dossier de l’arborescence de fichier possède un chemin unique depuis la racine, c’est donc un moyen de l’identifier.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Le chemin du dossier racine est &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Un chemin qui commence par &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt; est dit &lt;strong&gt;chemin absolu&lt;/strong&gt;, puisqu’il part de la racine. On a aussi souvent coutume de parler de &lt;strong&gt;chemin relatif&lt;/strong&gt; lorsqu’il part d’un dossier particulier. Dans l’exemple précédent, en partant du dossier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Users/fbrucker&lt;/code&gt;, le chemin relatif vers l’image d’Ada est : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Desktop/ada_lovelace.png&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Un chemin absolu commence toujours par &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt;. Un chemin qui ne commence pas par &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt; est &lt;strong&gt;toujours&lt;/strong&gt; un chemin relatif.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;plusieurs-racines&quot;&gt;plusieurs racines&lt;/h3&gt;

&lt;p&gt;On considère parfois que chaque disque dur, chaque clé usb constitue sa propre racine. Il y a alors une &lt;em&gt;racine des racines&lt;/em&gt;, qui contient le départ  vers les racines particulières des différents périphériques de stockages de l’ordinateur.
disques durs, clés, etc.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;C’est en réalité une vue de l’esprit. Il n’existe qu’une seule racine et chaque disque dur est &lt;a href=&quot;https://fr.wikipedia.org/wiki/Point_de_montage&quot;&gt;monté&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Souvent sous windows ces racines sont explicites, c’est &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;c:&lt;/code&gt; par exemple pour le disque dur principal.&lt;/p&gt;

&lt;h3 id=&quot;dossiers-spéciaux&quot;&gt;dossiers spéciaux&lt;/h3&gt;

&lt;p&gt;Pour qu’un ordinateur fonctionne, il a besoin d’avoir des dossiers spéciaux contenant le système d’exploitation, ainsi que des fichiers spéciaux contenant des programmes (ces fichiers sont dit exécutables).&lt;/p&gt;

&lt;p&gt;Il existe aussi des dossiers pour chaque utilisateurs de l’ordinateur où il peut ranger ses fichiers et où le système stock les préférences de l’utilisateur.&lt;/p&gt;

&lt;h3 id=&quot;dossiers--et-&quot;&gt;dossiers . et ..&lt;/h3&gt;

&lt;p&gt;Les dossiers &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt; et &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;..&lt;/code&gt; sont des dossiers spéciaux qui signifient :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;le dossiers courant pour &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;le dossiers précédent du dossiers &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt; pour &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;..&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;De là les 4 chemins suivants sont identiques :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Users/fbrucker/Desktop/ada_lovelace.png&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Users/fbrucker/./Desktop/./ada_lovelace.png&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Users/fbrucker/../fbrucker/Desktop/ada_lovelace.png&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Users/fbrucker/../fbrucker/./Desktop/ada_lovelace.png&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;On fait souvent commencer un chemin relatif par &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt; pour bien montrer sa différence par rapport à un chemin absolu qui commence par &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;maison&quot;&gt;maison&lt;/h4&gt;

&lt;p&gt;La &lt;em&gt;maison&lt;/em&gt; est le dossier principal d’un utilisateur.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Pour les utilisateurs de windows : il est recommandé que ce dossier ne comporte ni espace ni accent.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;fichiers&quot;&gt;fichiers&lt;/h2&gt;

&lt;h3 id=&quot;extension-de-fichier&quot;&gt;extension de fichier&lt;/h3&gt;

&lt;p&gt;Un nom de fichier comporte souvent un texte, suivi d’un &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt; puis de deux ou trois lettres qui forme une &lt;a href=&quot;https://fr.wikipedia.org/wiki/Extension_de_nom_de_fichier&quot;&gt;&lt;em&gt;extension&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Cette extension ne sert à rien pour l’ordinateur, c’est seulement une aide pour l’utilisateur et certaines applications. Cela permet à priori de catégoriser un fichier.&lt;/p&gt;

&lt;p&gt;Ainsi, même si l’extension d’un fichier texte est &lt;em&gt;“.txt”&lt;/em&gt;, rien ne vous empêche de la changer en &lt;em&gt;“.exe”&lt;/em&gt; par exemple. Cela ne change en rien la nature du fichier. Cela cependant apporte de la confusion car certaines applications vont penser que c’est un fichier exécutable et cela va planter quand elles vont tenter de le faire.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Dans un éditeur de texte, l’extension d’un fichier permet de charger une coloration syntaxique par défaut : &lt;em&gt;“.py”&lt;/em&gt; pour les fichiers python par exemple, &lt;em&gt;“.md”&lt;/em&gt; pour les fichier markdown.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ne soyez pas créatifs dans les extensions de fichiers, utilisez celle par défaut selon le type de fichier que vous utilisez.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;fichiers-exécutables&quot;&gt;fichiers exécutables&lt;/h3&gt;

&lt;p&gt;Les fichiers exécutables sont le cœur d’un système d’exploitation : ce sont les programmes.&lt;/p&gt;

&lt;p&gt;Leur format dépend du système d’exploitation, il est donc impossible d’utiliser un exécutable windows pour l’utiliser sous mac par exemple.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Un fichier python n’est &lt;strong&gt;pas&lt;/strong&gt; un fichier exécutable. C’est un fichier texte qui est est lu, on dit &lt;strong&gt;interprété&lt;/strong&gt; par l’interpréteur python qui lui est un fichier exécutable.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;dossiers-et-fichiers-cachés&quot;&gt;dossiers et fichiers cachés&lt;/h2&gt;

&lt;p&gt;Ce sont souvent des fichiers (ou des dossiers) de préférences, donc pas utile de les voir tout le temps. Dans le monde unix commencent par un &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt; dans le monde windows commencent par un &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_&lt;/code&gt; et ils sont invisible lorsque l’on regarde ces fichiers avec un explorateur de fichier.&lt;/p&gt;

&lt;p&gt;On peut cependant les afficher dans un explorateur de fichier en effectuant quelques manipulation :&lt;/p&gt;

&lt;details&gt;&lt;summary&gt;sous windows&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;&lt;a href=&quot;https://support.microsoft.com/fr-fr/windows/voir-les-fichiers-et-les-dossiers-cach%C3%A9s-dans-windows-97fbc472-c603-9d90-91d0-1166d1d9f4b5&quot;&gt;afficher les dossiers cachés sous windows&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;sous mac&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;&lt;a href=&quot;https://www.ionos.fr/digitalguide/serveur/configuration/mac-afficher-les-fichiers-et-dossiers-caches/&quot;&gt;sous mac&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Pour que la manipulation de touche décrite dans la page fonctionne, il faut également d’appuyer sur la touche &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fn&lt;/code&gt; en plus.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;sous linux&lt;/summary&gt;&lt;div&gt;
&lt;blockquote class=&quot;dancer&quot;&gt;
  &lt;p&gt;TBD&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;h2 id=&quot;terminal&quot;&gt;terminal&lt;/h2&gt;

&lt;p&gt;Le &lt;a href=&quot;/cours_informatique/tutos/systeme/cli/terminal/2021/08/24/terminal.html&quot;&gt;terminal&lt;/a&gt; est l’outil permettant d’exécuter des programmes. Il permet de contrôler directement ce qui est exécuté, et est l’endroit où l’on lancera nos scripts python par exemple.&lt;/p&gt;

&lt;p&gt;Une ligne du terminal sera toujours :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;soit un fichier exécutable&lt;/li&gt;
  &lt;li&gt;soit une commande (comme &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get-command&lt;/code&gt; pour un powershell par exemple)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Etudions par exemple la commande :&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-pyhton&quot;&gt;python mon_script.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Comme &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; n’est pas une commande c’est &lt;strong&gt;forcément&lt;/strong&gt; un fichier exécutable.  Le système d’exploitation cherche alors un fichier s’appelant &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; (ou &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python.exe&lt;/code&gt; si on est sous windows) dans un ensemble de dossiers qu’on appelle le &lt;strong&gt;path&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Connaître le path :&lt;/p&gt;

&lt;details&gt;&lt;summary&gt;sous windows&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;&lt;a href=&quot;https://java.com/fr/download/help/path_fr.html&quot;&gt;affichier et modifier le path&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;sous mac/linux&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;Dans un terminal, tapez :&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Cela affichera les différents dossier dans le path.&lt;/p&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;p&gt;Si le fichier &lt;em&gt;“python”&lt;/em&gt; (ou &lt;em&gt;“python.exe”&lt;/em&gt; si on est sous windows) n’est pas trouvé, le terminal rend une erreur.&lt;/p&gt;

&lt;p&gt;S’il est trouvé, il est exécuté.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Souvent &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt; (le répertoire courant) n’est pas dans le path. Il faut donc taper  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./truc&lt;/code&gt; si on veut exécuter  le fichier s’appelant truc dans le dossier courant.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;La partie suivant le fichier exécutable correspondent aux paramètre du programme. Pour savoir quelles sont les possibilités on regarde la &lt;a href=&quot;https://docs.python.org/3/using/cmdline.html&quot;&gt;documentation&lt;/a&gt; : un nom de fichier en paramètre signifie que l’on souhaite interpréter le fichier décrit par son chemin relatif.&lt;/p&gt;

&lt;p&gt;Ici : cela signifie qu’il existe un fichier &lt;em&gt;“mon_script.py”&lt;/em&gt; dans le répertoire courant du terminal.&lt;/p&gt;

&lt;h3 id=&quot;dossier-courant-dun-terminal&quot;&gt;dossier courant d’un terminal&lt;/h3&gt;

&lt;p&gt;Lorsque l’on lance un terminal il est &lt;strong&gt;toujours&lt;/strong&gt; dans un dossier du système. POur le connaitre, on peut taper la commande :&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;se-déplacer-avec-cd&quot;&gt;se déplacer avec cd&lt;/h4&gt;

&lt;p&gt;Pour changer de dossier, on utiliser la commande &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd&lt;/code&gt; suivi d’un chemin absolu ou relatif.&lt;/p&gt;

&lt;p&gt;Par exemple, sur mon mac, je crée un nouveau terminal. Par défaut, son dossier courant est la maison. La commande &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pwd&lt;/code&gt; me rend en effet : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Users/fbrucker&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Si je veux aller dans le dossier contenant ma photo d’Ada, je peux taper :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;un chemin absolu : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd /Users/fbrucker/Desktop&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;un chemin relatif : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd Desktop&lt;/code&gt;, ou encore &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd ./Desktop&lt;/code&gt; qui est équivalent.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class=&quot;attention&quot;&gt;
  &lt;p&gt;Notez que je ne peux pas aller dans un fichier.
 Si j’avais tapé &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Users/fbrucker/Desktop/ada_lovelace.png&lt;/code&gt; j’aurais eu une erreur. Sur mon mac, ça dit : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd: not a directory: /Users/fbrucker/Desktop/ada_lovelace.png&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;sous unix, le caractère &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~&lt;/code&gt; est équivalent au chemin absolu vers la maison. En tapant &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd ~&lt;/code&gt; je me retrouve alors directement à la maison. De là, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd ~/Desktop&lt;/code&gt; m’envoie dans le dossier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Users/fbrucker/Desktop&lt;/code&gt; quelque soit l’endroit où je me trouve.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;lister-avec-ls&quot;&gt;lister avec ls&lt;/h4&gt;

&lt;p&gt;La commande &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ls&lt;/code&gt; quand à elle donne les dossier et les fichier du dossier courant (on peut l’utiliser sans paramètre, ou avec un chemin absolu ou relatif).&lt;/p&gt;

&lt;p&gt;Par exemple, sur mon mac, si je tape :&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; /
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;J’obtiens tous les dossier de la racine :&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Applications Users        cores        home         sbin         var
Library      Volumes      dev          opt          tmp
System       bin          etc          private      usr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ouvrir-un-terminal-dans-un-dossier-spécifique&quot;&gt;ouvrir un terminal dans un dossier spécifique&lt;/h3&gt;

&lt;details&gt;&lt;summary&gt;sous mac&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;Dans le finder cliquez droit sur le dossier, puis &lt;em&gt;services &amp;gt; Nouveau terminal au dossier&lt;/em&gt;&lt;/p&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;sous windows&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;Dans un explorateur de fichier cliquez sur le dossier, puis dans le menu fichier&lt;/p&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;h3 id=&quot;copier-le-chemin-absolu&quot;&gt;copier le chemin absolu&lt;/h3&gt;

&lt;details&gt;&lt;summary&gt;sous mac&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;Dans le finder cliquez droit sur le dossier, puis copier. Coller ensuite dans le finder.&lt;/p&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;sous windows&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;Dans explorateur de fichier cliquez sur le dossier, puis &lt;em&gt;copier le chemin d’accès&lt;/em&gt; dans le menu &lt;em&gt;accueil&lt;/em&gt;&lt;/p&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;h2 id=&quot;pour-aller-plus-loin&quot;&gt;pour aller plus loin&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;liens&lt;/li&gt;
  &lt;li&gt;permissions&lt;/li&gt;
  &lt;li&gt;unix et tout est fichier&lt;/li&gt;
  &lt;li&gt;fichiers spéciaux (/dev/audio)&lt;/li&gt;
  &lt;li&gt;une application mac est un dossier.&lt;/li&gt;
  &lt;li&gt;comment écrire sur le disque dur, le &lt;a href=&quot;https://en.wikipedia.org/wiki/Comparison_of_file_systems&quot;&gt;file system&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>François Brucker</name></author><category term="fichiers" /><category term="système" /><category term="fichiers" /><category term="terminal" /><summary type="html">Qu’est-ce qu’un fichier ? Un dossier ? Comment naviguer dans un système de fichier avec le terminal ou l’explorateur de fichier.</summary></entry><entry><title type="html">Utiliser un terminal</title><link href="/cours_informatique/tutos/systeme/cli/terminal/2021/08/24/terminal.html" rel="alternate" type="text/html" title="Utiliser un terminal" /><published>2021-08-24T00:00:00+00:00</published><updated>2021-08-24T00:00:00+00:00</updated><id>/cours_informatique/tutos/systeme/cli/terminal/2021/08/24/terminal</id><content type="html" xml:base="/cours_informatique/tutos/systeme/cli/terminal/2021/08/24/terminal.html">&lt;p&gt;Qu’est-ce que le terminal ? Comment le trouver et taper des commandes.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;introduction&quot;&gt;introduction&lt;/h2&gt;

&lt;p&gt;Le terminal est l’outil utilisé pour taper des commandes qui seront ensuite exécutées par votre ordinateur. On appelle ça le &lt;a href=&quot;https://fr.wikipedia.org/wiki/Interface_en_ligne_de_commande&quot;&gt;CLI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Même si cela est intimidant, le CLI est le moyen le plus efficace d’interagir avec votre ordinateur car, contrairement aux applications :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;on peut ajouter des paramètres aux instructions&lt;/li&gt;
  &lt;li&gt;on gère facilement les entrées et les sorties des commandes&lt;/li&gt;
  &lt;li&gt;c’est automatisable par des scripts.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enfin, c’est souvent la seule façon d’interagir avec un ordinateur distant.&lt;/p&gt;

&lt;p&gt;Vous pouvez a priori utiliser votre ordinateur uniquement avec un terminal. L’interface graphique n’est qu’un ajout sympathique mais non indispensable à l’utilisation d’un ordinateur. Alors bien sur vous n’utiliserez pas le terminal tout le temps mais savoir s’en servir pourra vous faire gagner un temps fou lorsque vous faites de l’informatique (en plus de ce petit sentiment grisant de &lt;a href=&quot;https://www.youtube.com/watch?v=MvEXkd3O2ow&quot;&gt;voir directement la matrice&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&quot;lapplication-terminal&quot;&gt;l’application terminal&lt;/h2&gt;

&lt;p&gt;Selon votre système d’application, le terminal va se trouver à des endroits différents :&lt;/p&gt;

&lt;details&gt;&lt;summary&gt;sous linux&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;Si vous êtes sous linux vous devriez savoir ouvrir un terminal. C’est souvent une application avec une télévision comme icône.&lt;/p&gt;

&lt;blockquote class=&quot;note&quot;&gt;
  &lt;p&gt;TBD : à faire mieux.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;sous mac&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;Le &lt;a href=&quot;https://www.howtogeek.com/682770/how-to-open-the-terminal-on-a-mac/&quot;&gt;terminal&lt;/a&gt; se trouve dans le dossier &lt;em&gt;“/Application/utilitaires”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Avec le &lt;strong&gt;Finder&lt;/strong&gt; :&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;menu aller,&lt;/li&gt;
  &lt;li&gt;allez dans le dossier “&lt;em&gt;utilitaires&lt;/em&gt;”,&lt;/li&gt;
  &lt;li&gt;double-cliquez sur l’icône “Terminal”.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;Le terminal est super utile, ça vaut le coup d’ajouter un raccourci dans la barre du &lt;strong&gt;Finder&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Une fois dans l’application &lt;strong&gt;Terminal&lt;/strong&gt; vous pouvez ouvrir une nouvelle fenêtre dans le menu “Shell &amp;gt; Nouvelle Fenêtre &amp;gt; Nouvelle fenêtre avec le profil - …” (les “…” correspondent à votre profil de fenêtre)&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;sous windows&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;Le terminal s’appelle &lt;em&gt;powershell&lt;/em&gt; sous w10.&lt;/p&gt;

&lt;p&gt;Pour ouvrir une fenêtre powershell, cliquez droit sur le drapeau windows tout à gauche de la barre des tâches puis choisissez d’ouvrir une fenêtre powershell (ce n’est pas la peine qu’elle soit en mode administrateur)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Le terminal est super utile, ça vaut le coup d’épingler le powershell dans la barre des raccourcis.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote class=&quot;attention&quot;&gt;
  &lt;p&gt;Il existe une autre sorte de terminal sous windows, &lt;em&gt;l’invite de commande&lt;/em&gt;. POur la lancer tapez &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmd&lt;/code&gt; dans la barre de recherche (juste à droite du drapeau windows tout à gauche de la barre des tâches) puis appuyez sur la touche entrée. 
Il n’est pas recommandé d’utiliser l’invite de commande, à moins que vous soyez un fana de &lt;a href=&quot;https://www.reddit.com/r/Giscardpunk/&quot;&gt;r/giscardpunk&lt;/a&gt; bien sur.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;h2 id=&quot;utiliser-le-terminal&quot;&gt;utiliser le terminal&lt;/h2&gt;

&lt;p&gt;Maintenant que vous avez trouvé le terminal, ouvrez une fenêtre terminal. Vous êtes devant ce qu’on appelle un &lt;em&gt;prompt&lt;/em&gt;. On attend que vous tapiez des commandes. Ces commandes peuvent être de 2 types :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;soit des noms de fichiers qui sont &lt;em&gt;exécutables&lt;/em&gt; (ce sont des programmes)&lt;/li&gt;
  &lt;li&gt;soit des instruction compréhensible par le terminal comme &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get-command&lt;/code&gt; avec powershell ou &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ls&lt;/code&gt; avec un termnial unix/mac.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;N’ayez pas peur. C’est simple à utiliser. On tape une commande, on appuie sur entrée et la commande s’exécute.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On utilisera globalement le terminal pour lancer des applications. Pour cela, vous pouvez regarder ce &lt;a href=&quot;/cours_informatique/tutos/systeme/fichiers/2021/08/24/fichiers-navigation.html&quot;&gt;tutoriel&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;autres-tutos&quot;&gt;autres tutos&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;windows : &lt;a href=&quot;https://docs.microsoft.com/fr-fr/powershell/scripting/overview?view=powershell-7.1&quot;&gt;https://docs.microsoft.com/fr-fr/powershell/scripting/overview?view=powershell-7.1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;mac : &lt;a href=&quot;https://support.apple.com/fr-fr/guide/terminal/welcome/mac&quot;&gt;https://support.apple.com/fr-fr/guide/terminal/welcome/mac&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class=&quot;note&quot;&gt;
  &lt;p&gt;TBD : ajouter si on en trouve&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>François Brucker</name></author><category term="tutos" /><category term="systeme" /><category term="CLI" /><category term="terminal" /><category term="système" /><category term="terminal" /><category term="CLI" /><summary type="html">Qu’est-ce que le terminal ? Comment le trouver et taper des commandes.</summary></entry><entry><title type="html">Installation de python</title><link href="/cours_informatique/tutos/python/installation/terminal/2021/08/20/installation-de-python.html" rel="alternate" type="text/html" title="Installation de python" /><published>2021-08-20T00:00:00+00:00</published><updated>2021-08-20T00:00:00+00:00</updated><id>/cours_informatique/tutos/python/installation/terminal/2021/08/20/installation-de-python</id><content type="html" xml:base="/cours_informatique/tutos/python/installation/terminal/2021/08/20/installation-de-python.html">&lt;p&gt;Comment installer et utiliser python sur son ordinateur. On y verra différentes solutions.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;plan&quot;&gt;plan&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#python-&quot;&gt;qu’est que python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#installation&quot;&gt;installation&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#anaconda-id&quot;&gt;anaconda&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#gestionnaire-package-id&quot;&gt;gestionnaire de paquet&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#interpreteur-id&quot;&gt;tests de fonctionnement avec un terminal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#packages&quot;&gt;installation de nouveaux packages&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;python-&quot;&gt;python ?&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://fr.wikipedia.org/wiki/Python_(langage)&quot;&gt;https://fr.wikipedia.org/wiki/Python_(langage)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Stricto sensu, &lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt; est un langage de programmation initialement développé par &lt;a href=&quot;https://fr.wikipedia.org/wiki/Guido_van_Rossum&quot;&gt;Guido van Rossum&lt;/a&gt; pour le bien des développeurs et de l’humanité.&lt;/p&gt;

&lt;p&gt;Pour pouvoir écrire du code python et l’exécuter sur votre ordinateur, il vous faudra quelques outils :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;un &lt;a href=&quot;https://fr.wikipedia.org/wiki/%C3%89diteur_de_texte&quot;&gt;éditeur de texte&lt;/a&gt;&lt;/strong&gt;. Il vous permettra d’écrire du code dans le langage python et de le sauver dans des &lt;a href=&quot;https://fr.wikipedia.org/wiki/Fichier_texte&quot;&gt;fichiers texte&lt;/a&gt;. Par défaut, l’extension de fichier python est &lt;em&gt;“.py”&lt;/em&gt;. Par exemple, un fichier nommé &lt;em&gt;“hello.py”&lt;/em&gt; à toute les chance d’être un programme python.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;un &lt;a href=&quot;https://docs.python.org/fr/3/tutorial/interpreter.html&quot;&gt;interpréteur python&lt;/a&gt;&lt;/strong&gt;. C’est un programme qui &lt;em&gt;exécute&lt;/em&gt; du code python. L’interpréteur python étant un programme, il est différent selon son système d’exploitiation (mac, linux ou windows par exemple). Lorsque l’on &lt;em&gt;installe&lt;/em&gt; python, c’est en fait l’interpréteur qu’on installe sur sa machine.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;des bibliothèques&lt;/strong&gt;. Une bibliothèque, module ou encore package python est un ensemble de fichiers de code permettant de réaliser une ou plusieurs taches précises (comme &lt;a href=&quot;https://numpy.org/&quot;&gt;numpy&lt;/a&gt; pour le calcul scientifique ou &lt;a href=&quot;https://flask.palletsprojects.com/&quot;&gt;flask&lt;/a&gt; pour créer des serveur web). L’utilisation de bibliothèques permet de créer rapidement des programmes python robuste et efficaces (avant de coder quelque chose, vérifiez s’il n’existe pas déjà un module le faisant… Vous gagnerez du temps). Pour installer facilement des modules, on utilise un programme nommé &lt;a href=&quot;https://pypi.org/project/pip/&quot;&gt;&lt;em&gt;“pip”&lt;/em&gt;&lt;/a&gt; (package installer for python) qui va récupérer depuis le site &lt;a href=&quot;https://pypi.org/&quot;&gt;PyPi&lt;/a&gt; (python package index) la bibliothèque demandée et va l’installer sur votre ordinateur.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;quel-python-utiliser-&quot;&gt;quel python utiliser ?&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Utilisez la version 3 de python&lt;/strong&gt;. Il n’est pas nécessaire d’avoir la toute dernière itération de cette version (3.9.6 à l’heure où je tape ces caractères), toute version 3 de python pas trop ancienne doit convenir.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Si vous installez python pour la première fois sur votre ordinateur, choisissez d’installer la dernière version stable de python 3.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Une version de python est composée de 3 nombres &lt;a href=&quot;https://semver.org/&quot;&gt;MAJOR.MINOR.PATCH&lt;/a&gt; :&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;MAJOR&lt;/strong&gt; : pour nous sera 3.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;MINOR&lt;/strong&gt; : chaque année une nouvelle itération arrive, avec son lot de nouveautés en therme de structures de données ou de bibliothèques.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;PATCH&lt;/strong&gt; : correctifs.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Chaque année sort une nouvelle version de python (voir &lt;a href=&quot;https://devguide.python.org/#status-of-python-branches&quot;&gt;https://devguide.python.org/#status-of-python-branches&lt;/a&gt;), les anciennes versions sont maintenues 5 ans avant d’être considérées comme obsolète. Chaque version vient avec son &lt;a href=&quot;https://fr.wikipedia.org/wiki/Changelog&quot;&gt;changelog&lt;/a&gt;, qui donne ses nouveautés et changements par rapport à la version précédente (&lt;a href=&quot;https://docs.python.org/release/3.9.6/whatsnew/changelog.html#changelog&quot;&gt;ici&lt;/a&gt; le changelog de la version 3.9.6)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;La version majeur actuelle de python est 3, il n’y pas prévu d’en changer avant un certain temps.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;et-python-2-&quot;&gt;et python 2 ?&lt;/h3&gt;

&lt;p&gt;Depuis le 1er janvier 2020, la version majeure 2 de python est &lt;strong&gt;obsolète&lt;/strong&gt;, il est donc fortement recommandé de ne plus l’utiliser. Vos programme seront en effet difficilement maintenance et de plus en plus difficilement utilisable.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Il n’y a &lt;strong&gt;aucune&lt;/strong&gt; bonne raison d’utiliser la version 2 de python pour écrire des programmes actuellement.
La version de python . Il n’est pas nécessaire
python2 vs python3&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote class=&quot;attention&quot;&gt;
  &lt;p&gt;Il existe sur le net encore beaucoup d’exemples utilisant la version2 de python, ou certains profs un peu feignant qui ne passent pas leurs exemple/cours en python3. Plutôt que d’utiliser python2, il est recommandé de convertir ces programmes dans la version 3 et de demander la mise à jour des cours…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;jai-quoi-comme-python-&quot;&gt;j’ai quoi comme python ?&lt;/h3&gt;

&lt;p&gt;Nous y reviendrons, mais si vous savez exécuter du code python mais vous ne savez pas trop quel interpréteur vous utilisez (par exemple vous utilisez &lt;a href=&quot;https://jupyter.org/&quot;&gt;jupiter&lt;/a&gt; via un intranet ou &lt;a href=&quot;https://www.spyder-ide.org/&quot;&gt;spider&lt;/a&gt;), il existe quelques trucs simple pour savoir quelle version de python on utilise.&lt;/p&gt;

&lt;h4 id=&quot;python-2-ou-python-3&quot;&gt;python 2 ou python 3&lt;/h4&gt;

&lt;p&gt;La différence la plus visible entre une version 2 et une version 3 de python est que pour une version 3 de python, le code suivant :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;j'utilise un langage obsolète&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;produit l’erreur :&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SyntaxError: Missing parentheses in call to 'print'. Did you mean print(&quot;j'utilise un langage obsolète&quot;)?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Alors que le code s’exécute sans soucis avec la version 2 de python (il écrit &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;j'utilise un langage obsolète&lt;/code&gt;).&lt;/p&gt;

&lt;h4 id=&quot;quelle-version-de-python&quot;&gt;quelle version de python&lt;/h4&gt;

&lt;p&gt;On suppose que l’on utilise la version 3 de python. Pour connaitre la version spécifique de python, on peut utiliser &lt;a href=&quot;https://docs.python.org/fr/3/library/sys.html#sys.version&quot;&gt;la constante &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version&lt;/code&gt;du module &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sys&lt;/code&gt;de pyhton&lt;/a&gt; :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;qui rend chez moi :&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3.9.6 (default, Jun 29 2021, 05:25:02) 
[Clang 12.0.5 (clang-1205.0.22.9)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;C’est à dire que j’utilise la version 3.9.6 de python et que mon interpréteur a été compilé par &lt;a href=&quot;https://clang.llvm.org/&quot;&gt;Clang&lt;/a&gt; (c’est sur un mac).&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;installation&lt;/h2&gt;

&lt;p&gt;Nous allons ici nous concentrer sur l’installation de l’interpréteur python. Il existe plusieurs façon de faire. Nous en présenterons 2 :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;solution universelle simple : utilisez la &lt;a href=&quot;#anaconda-id&quot;&gt;distribution anaconda&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;solution informaticienne : à privilégier si vous voulez contrôler toute votre installation (c’est bien). On utilise un &lt;a href=&quot;#gestionnaire-package-id&quot;&gt;gestionnaire de package&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Parfois, il n’y a rien à faire (c’est souvent le cas sous mac ou linux qui arrivent avec des versions de python 2 et 3 déjà installées).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Une fois que vous aurez installé python (ou pour savoir si vous l’avez déjà installé), vérifiez le en tentant d’&lt;a href=&quot;#interpreteur-id&quot;&gt;exécuter l’interpréteur python dans un terminal&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;anaconda-id&quot;&gt;installation d’anaconda&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.anaconda.com/&quot;&gt;Anaconda&lt;/a&gt; est une entreprise gérant des distributions python orientés data-science. L’intérêt d’une telle distribution est qu’elle regroupe et installe de nombreux utilitaires. Le côté négatif est que l’on ne maîtrise pas les paquets installés et l’installation de paquets supplémentaires est parfois problématique.&lt;/p&gt;

&lt;p&gt;Cependant, pour une utilisation basique de python ou une utilisation via jupyter, c’est une solution tout à fait satisfaisante car facile à mettre en œuvre sans être informaticien.&lt;/p&gt;

&lt;h4 id=&quot;téléchargement-de-linstalleur&quot;&gt;Téléchargement de l’installeur&lt;/h4&gt;

&lt;p&gt;Nous allons télécharger la distribution open-source d’anaconda &lt;a href=&quot;https://www.anaconda.com/products/individual&quot;&gt;ici&lt;/a&gt;. Choisissez la version 64bit graphique correspondant à votre système d’installation, puis cliquez sur l’installeur.&lt;/p&gt;

&lt;p&gt;Lors de l’installation :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;vous pourrez choisir de faire une installation uniquement pour vous ou pour tous les utilisateurs. Choisissez &lt;strong&gt;pour tous les utilisateurs&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;sous windows, vous pourrez choisir d’ajouter le python d’anaconda au &lt;em&gt;path&lt;/em&gt; de windows, c’est à dire que lorsque ovus taperez python dans un terminal, ce sera celui d’anaconda qui se lancera. &lt;strong&gt;choisissez cette option&lt;/strong&gt;, même si elle n’est pas recommandée.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class=&quot;attention&quot;&gt;
  &lt;p&gt;Si vous avez une ancienne version d’anaconda et que vous souhaitez installer une mise à jour, il vous faudra commencer par supprimer le dossier contenant l’ancienne version&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Anaconda change le chemin par défaut python pour que ce soit celui d’anaconda qui soit utilisé.&lt;/p&gt;

  &lt;p&gt;Sous mac et linux cela se passe en modifiant le fichier de configuration du shell (entre &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;conda initialize&lt;/code&gt;).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;test-de-la-distribution&quot;&gt;test de la distribution&lt;/h4&gt;

&lt;p&gt;Anaconda a installé des choses, en particulier l’application &lt;em&gt;Anaconda-Navigator&lt;/em&gt; qui vous permet de lancer toutes les applications liées à Anaconda.&lt;/p&gt;

&lt;p&gt;Lancez l’application &lt;em&gt;Notebook&lt;/em&gt; puis :&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;créez un nouveau notebook &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python3&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;dans la cellule tapez &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print(&quot;Hello world!&quot;)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;cliquez sur l’icône &lt;em&gt;Exécuter&lt;/em&gt; sur la bannière de titre ou appuyer sur &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shift + entrée&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Vous devriez voir le texte &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hello World&lt;/code&gt; en sortie de votre cellule.&lt;/p&gt;

&lt;h4 id=&quot;anaconda-avec-un-terminal&quot;&gt;anaconda avec un terminal&lt;/h4&gt;

&lt;p&gt;Dans l’&lt;em&gt;anaconda navigator&lt;/em&gt;, cliquez sur &lt;em&gt;Environnements&lt;/em&gt; dans le menu de gauche (c’est le deuxième choix, après &lt;em&gt;Home&lt;/em&gt; et avant &lt;em&gt;Learning&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Vous devez avoir un unique environnement : &lt;em&gt;base (root)&lt;/em&gt;. Un environnement est un interpréteur python et tous ses packages installés. On aura parfois envie de créer ses propres environnements pour installer soit une version spécifique de python, soit n’installer que certains packages.&lt;/p&gt;

&lt;p&gt;Pour l’instant utilisons l’environnement de base. En cliquant sur le triangle vert à droite de l’environnement &lt;em&gt;base (root)&lt;/em&gt;, vous pouvez cliquer sur &lt;em&gt;open terminal&lt;/em&gt;, ce qui ouvrira un terminal. Une fois le terminal ouvert, remarquez qu’à gauche de l’invite de commande vous avez &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(base)&lt;/code&gt; d’écrit. Ceci montre quel environnement python vous avez.&lt;/p&gt;

&lt;p&gt;Vos pouvez &lt;a href=&quot;https://docs.anaconda.com/anaconda/user-guide/tasks/integration/python-path/&quot;&gt;connaitre l’interpréteur&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;gestionnaire-package-id&quot;&gt;installation via un gestionnaire de package&lt;/h3&gt;

&lt;p&gt;Une bonne pratique d’installation de logiciel sur son ordinateur est d’utiliser un gestionnaire de package. Il vous permet de savoir exactement ce qui est utilisé, quelle version, et surtout gère tout seul les mise à jours.&lt;/p&gt;

&lt;p&gt;C’est un peut plus compliqué qu’utiliser anaconda mais si vous voulez faire de l’informatique sérieuse ou sérieusement de l’informatique, il est conseillé d’utiliser cette solution.&lt;/p&gt;

&lt;details&gt;&lt;summary&gt;sous mac&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;On utilise &lt;a href=&quot;https://brew.sh/index_fr&quot;&gt;brew&lt;/a&gt;. Toutes les commandes se font via le &lt;a href=&quot;/cours_informatique/tutos/systeme/cli/terminal/2021/08/24/terminal.html&quot;&gt;terminal&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Une fois brew installé, vous pouvez installer python en tapant la commande :&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;python
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;sous windows&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;Pour l’instant téléchargez le tout depuis le store. Suivez ce &lt;a href=&quot;https://docs.microsoft.com/fr-fr/windows/python/beginners&quot;&gt;tutoriel&lt;/a&gt; pour l’installation.&lt;/p&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;details&gt;&lt;summary&gt;sous linux&lt;/summary&gt;&lt;div&gt;
&lt;blockquote class=&quot;danger&quot;&gt;
  &lt;p&gt;TBD : avec apt-get ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;h2 id=&quot;interpreteur-id&quot;&gt;utiliser l’interpréteur python&lt;/h2&gt;

&lt;p&gt;Commencer par ouvrir une fenêtre Terminal. Si vous ne savez ps ce que c’est regardez ce &lt;a href=&quot;/cours_informatique/tutos/systeme/cli/terminal/2021/08/24/terminal.html&quot;&gt;tutoriel&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;exécution-de-linterpréteur-python&quot;&gt;exécution de l’interpréteur python&lt;/h3&gt;

&lt;p&gt;L’interpréteur python s’appelle soit &lt;em&gt;“python”&lt;/em&gt;, soit &lt;em&gt;“python3”&lt;/em&gt;. Regardez celui que vous possédez.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sous windows, c’est souvent &lt;em&gt;“python”&lt;/em&gt; qu’il s’appelle, sous mac et linux c’est &lt;em&gt;“python3”&lt;/em&gt;. Pour le reste du tuto, je considérerai que c’est &lt;em&gt;“python”&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Dans un terminal, tapez la commande :&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Si ça a marché, l’interpréteur aura donné sa version (&lt;strong&gt;assurez vous que c’est bien python 3&lt;/strong&gt;) et vous donnera une invite de commande qui commence par &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;.Vous pouvez taper une ligne de python. Lorsque vous taperez sur entrée, votre ligne sera interprétée en python et donnera le résultat.&lt;/p&gt;

&lt;p&gt;Par exemple tapez : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print(coucou !)&lt;/code&gt;et l’interpréteur vous rendra &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;coucou !&lt;/code&gt;. On ne pourrait utiliser python que comme ça, mais ce n’est pas très pratique.&lt;/p&gt;

&lt;p&gt;Pour quitter l’interpréteur tapez &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;quit()&lt;/code&gt; puis appuyez sur la touche entrée.&lt;/p&gt;

&lt;h3 id=&quot;version-de-linterpréteur-python&quot;&gt;version de l’interpréteur python&lt;/h3&gt;

&lt;p&gt;Beaucoup de programme supportent d’être lancé avec des paramètres, que l’on ajoute à la suite du nom. Par exemple pour connaître la version de l’interpréteur, on tape dans un terminal :&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Chez moi ça rend :&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Python 3.9.6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Pour connaitre tous les paramètres possible, on peut soit se référer à la &lt;a href=&quot;https://docs.python.org/3/using/cmdline.html&quot;&gt;documentation&lt;/a&gt;, soit taper : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python --help&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;emplacement-de-votre-interpréteur&quot;&gt;emplacement de votre interpréteur&lt;/h3&gt;

&lt;p&gt;Dans un terminal tapez la commande :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;which python&lt;/code&gt; sur un mac ou un linux,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get-command python&lt;/code&gt; sur un windows avec powershell,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La commande devrait vous rendre l’emplacement sur votre disque dur de votre interpréteur. Vérifiez le avec un explorateur de fichier.&lt;/p&gt;

&lt;h2 id=&quot;packages&quot;&gt;packages&lt;/h2&gt;

&lt;p&gt;Python vient avec une &lt;a href=&quot;https://docs.python.org/3/library/&quot;&gt;liste de packages&lt;/a&gt; bien fournie. On peut les utiliser via le mot clé &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;import&lt;/code&gt; en python. Il en existe une foultitude d’autres qui permettent d’aider à coder rapidement. La liste des différents packages est disponible sur &lt;a href=&quot;https://pypi.org/&quot;&gt;https://pypi.org/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;installation-avec-pip&quot;&gt;installation avec pip&lt;/h3&gt;

&lt;p&gt;Pour installer de nouveaux packages python, on utilise la commande &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;si votre interpréteur python est &lt;em&gt;“python3”&lt;/em&gt;, vous devez utiliser la commande &lt;em&gt;“pip3”&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Testez le en ouvrant un terminal et en tapant :&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;La commande devrait vous rendre le numéro de version de pip ainsi que le chemin du programme python qui lui est associé.&lt;/p&gt;

&lt;p&gt;Les packages déjà installé par pip seront visible avec la commande :&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Si vous avez une distribution anaconda, vous devriez avoir plein de choses, sinon, beaucoup moins.&lt;/p&gt;

&lt;blockquote class=&quot;attention&quot;&gt;
  &lt;p&gt;Il est crucial de vérifier que pip est bien lié à l’interpréteur python que vous voulez. Sinon, vous installerez des packages pour un mauvais interpréteur.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On peut maintenant utiliser pip pour installer un nouveau package. Nous allons installer &lt;a href=&quot;https://pypi.org/project/black/&quot;&gt;black&lt;/a&gt; qui rendra joli tous nos programmes python. Dans un terminal tapez :&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;black
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Une fois l’installation terminée, black devrait apparaitre dans la liste des packages installés (vous pouvez le voir avec &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip list&lt;/code&gt;).&lt;/p&gt;

&lt;h3 id=&quot;où-sont-les-packages-&quot;&gt;où sont les packages ?&lt;/h3&gt;

&lt;p&gt;Les répertoires où python va cherchez les packages est dans la liste &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sys.path&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;vous pouvez le voir en exécutant le code :&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dossier&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dossier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Chez moi, sur un mac où python est installé avec &lt;a href=&quot;https://brew.sh/&quot;&gt;brew&lt;/a&gt; ce programme rend :&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/local/Cellar/python@3.9/3.9.6/Frameworks/Python.framework/Versions/3.9/lib/python39.zip
/usr/local/Cellar/python@3.9/3.9.6/Frameworks/Python.framework/Versions/3.9/lib/python3.9
/usr/local/Cellar/python@3.9/3.9.6/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload
/usr/local/lib/python3.9/site-packages
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Il y a plusieurs dossiers :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;“/usr/local/Cellar/python@3.9/3.9.6/Frameworks/Python.framework/Versions/3.9/lib/python3.9”&lt;/em&gt; contient les packages de bibliothèque standard (il contient par exemple un fichier &lt;em&gt;“random.py”&lt;/em&gt; qui contient le code du package &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;random&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;“/usr/local/Cellar/python@3.9/3.9.6/Frameworks/Python.framework/Versions/3.9/lib/python3.9/lib-dynload”&lt;/em&gt; contient les packages python qui ne sont pas écrit en python mais en C&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;“/usr/local/lib/python3.9/site-packages”&lt;/em&gt; qui contient les packages qui seront installés par pip.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class=&quot;attention&quot;&gt;
  &lt;p&gt;La gestion des packages peut être compliquée. Normalement, si vous vous y prenez comme indiqué ici et en utilsant votre ordinateur personnel, tout devrait bien se passer. Si cela commence à ne plus aller, vous pouvez essayer d’installer les packages à un autre en endroit en suivant &lt;a href=&quot;https://opensource.com/article/19/4/managing-python-packages&quot;&gt;ce tuto&lt;/a&gt;, ou, comme on le fera plus tard en utilisant un environnement virtuel. Mais, dans le doute, consultez un prof qui s’y connait.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;éditeur&quot;&gt;éditeur&lt;/h2&gt;

&lt;p&gt;Il en existe une multitude. Prenez en un qui permettent non seulement d’écrire aisément du code python mais aussi d’exécuter facilement tout ce qui va avec écrire du code :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;coloration syntaxique&lt;/li&gt;
  &lt;li&gt;nommage et renommage de variables sur tout un projet&lt;/li&gt;
  &lt;li&gt;lancer des tests&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;J’en conseille 2 :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;visual studio code&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jetbrains.com/fr-fr/pycharm/&quot;&gt;pycharm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Il existe également d’autres façon d’utiliser python, en mode interactif par exemple en utilisant &lt;a href=&quot;https://jupyter.org/&quot;&gt;jupyter&lt;/a&gt; avec anaconda, ou encore &lt;a href=&quot;https://colab.research.google.com&quot;&gt;colab&lt;/a&gt;.&lt;/p&gt;</content><author><name>François Brucker</name></author><category term="tutos" /><category term="python" /><category term="installation" /><category term="terminal" /><summary type="html">Comment installer et utiliser python sur son ordinateur. On y verra différentes solutions.</summary></entry><entry><title type="html">Bases de python</title><link href="/cours_informatique/tutos/python/langage/2021/08/19/bases-de-python.html" rel="alternate" type="text/html" title="Bases de python" /><published>2021-08-19T00:00:00+00:00</published><updated>2021-08-19T00:00:00+00:00</updated><id>/cours_informatique/tutos/python/langage/2021/08/19/bases-de-python</id><content type="html" xml:base="/cours_informatique/tutos/python/langage/2021/08/19/bases-de-python.html">&lt;p&gt;Notions de base du langage python. Ce n’est cependant pas un cours, on y reprend juste les différentes notions à connaître ainsi que les principales structures de données à utiliser.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;On supposeras que vous ayez un interpréteur python qui fonctionne ainsi qu’un éditeur de texte pour écrire des programmes.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;On utilisera ici la version 3 de python (plus personne — vraiment — ne devrait utiliser la version 2) dans sa dernière itération (3.9.6 à l’heure où je tape ces caractères), mais n’importe quelle version 3 de python devrait faire fonctionner les exemples de ce tutoriel. Les liens vers la documentation officielle seront toujours ceux de la dernière version stable de python.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Un petit rappel des bases de la programmation en python que vous êtes sensés savoir pour suivre les différents cours d’informatique. On y ajoute quelques exercices pour être sur que l’on a compris.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/&quot;&gt;https://docs.python.org/3/&lt;/a&gt; toutes les réponses et bien plus encore s’y trouvent.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nous vous recommandons également de faire le &lt;a href=&quot;https://docs.python.org/3/tutorial/index.html&quot;&gt;tutoriel&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;les-données&quot;&gt;Les données&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#built-in-types&quot;&gt;Documentation correspondante&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Les commentaires en Python se font à l’aide de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;les-5-classes-de-base&quot;&gt;Les 5 classes de base&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Chaînes de caractères&lt;/li&gt;
  &lt;li&gt;Entiers&lt;/li&gt;
  &lt;li&gt;Réels&lt;/li&gt;
  &lt;li&gt;Complexes (la notation utilise j à la place de i)&lt;/li&gt;
  &lt;li&gt;Booléens&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Afin de connaître la classe d’un objet, on peut utiliser la fonction &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;type&lt;/code&gt; :&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Rendra : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;class 'int'&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;On peut créer des objets de classes différentes avec des fonctions telles que:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str()&lt;/code&gt;&lt;/a&gt; qui représentera les objets &lt;em&gt;chaîne de caractères&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/functions.html#float&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;float()&lt;/code&gt;&lt;/a&gt; qui représentera les objets &lt;em&gt;nombres réels&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int()&lt;/code&gt;&lt;/a&gt; qui représentera les objets &lt;em&gt;nombres entiers&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/functions.html#complex&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;complex()&lt;/code&gt;&lt;/a&gt; qui représentera les objets &lt;em&gt;nombres complexes&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bool()&lt;/code&gt;&lt;/a&gt; qui représentera les objets &lt;em&gt;booléens&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Par exemple, en tapant &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str(42)&lt;/code&gt;, on rend un objet de classe &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str&lt;/code&gt; (chaîne de caractères) à partir d’un objet de classe &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int&lt;/code&gt; (entier).&lt;/p&gt;

&lt;h3 id=&quot;variables&quot;&gt;Variables&lt;/h3&gt;

&lt;p&gt;Une variable est un nom auquel est associé un objet. Pour associer un nom à un objet on utilise l’opérateur d’affectation &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;=&lt;/code&gt; tel que:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nom = objet
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A gauche de l’opérateur &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;=&lt;/code&gt; se trouve un &lt;strong&gt;nom&lt;/strong&gt; (en gros, quelque chose ne pouvant commencer par un nombre) et à droite un &lt;strong&gt;objet&lt;/strong&gt;. Dans toute la suite du programme, dès que l’interpréteur python rencontrera le nom, il le remplacera par l’objet.&lt;/p&gt;

&lt;blockquote class=&quot;attention&quot;&gt;
  &lt;p&gt;Un nom n’est &lt;strong&gt;PAS&lt;/strong&gt; une chaîne de caractères. Une chaîne de caractère est un objet alors qu’un nom n’est qu’un alias vers un objet.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Il est important de comprendre que l’opérateur d’affectation = n’est pas symétrique. À gauche, des noms et à droite, des objets.&lt;/p&gt;

&lt;p&gt;Attardons nous un moment sur ces notions car elles seront cruciales plus tard pour appréhender les possibilités offertes par les objets.&lt;/p&gt;

&lt;p&gt;Considérons le programme suivant :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/cours_informatique/assets/tutos/bases-de-python/nom_et_objets.png&quot; alt=&quot;association nom variable&quot; style=&quot;margin: auto;display: block;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;La figure montre le résultat après chaque instruction. On voit qu’un même objet peut parfaitement
avoir plusieurs noms. Cependant, à un nom correspond un unique objet. Les objets qui n’ont plus de
noms sont supprimés à intervalles réguliers (c’est ce qu’on appelle le &lt;a href=&quot;https://towardsdatascience.com/memory-management-and-garbage-collection-in-python-c1cb51d1612c&quot;&gt;garbage collector&lt;/a&gt;) puisque l’on ne peut plus y accéder.&lt;/p&gt;

&lt;p&gt;Le mécanisme décrit précédemment (remplacement des noms par les objets référencés avant exécution
de l’instruction) montre que l’on peut affecter plusieurs noms en même temps, comme le montre l’exemple
suivant :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;les-structures-de-données&quot;&gt;Les structures de données&lt;/h3&gt;

&lt;h4 id=&quot;les-listes&quot;&gt;Les listes&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/tutorial/datastructures.html#more-on-lists&quot;&gt;https://docs.python.org/3/tutorial/datastructures.html#more-on-lists&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;création-directe&quot;&gt;Création directe&lt;/h5&gt;

&lt;p&gt;On peut créer une liste directement:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Soit en créant une liste vide puis en ajoutant des éléments un à un. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;l = []&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;l.append(1)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Soit en créant la liste déjà pré-remplie. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;l = [1, 2, True, &quot;Hello World&quot;]&lt;/code&gt;. Cette liste contient 4 éléments et est &lt;strong&gt;indexée à partir de 0&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La fonction &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;len()&lt;/code&gt; permet d’obtenir la longueur de la liste. Sur le dernier exemple, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;len(l)&lt;/code&gt; rend &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4&lt;/code&gt;.
On peut alors accéder aux éléments de la liste à l’aide d’un indice variant entre &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt; et &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;len(l) - 1&lt;/code&gt;. Ainsi  avec &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;l[3]&lt;/code&gt; on obtient la chaîne de caractère “Hello World”.&lt;/p&gt;

&lt;h5 id=&quot;création-à-laide-de-range&quot;&gt;Création à l’aide de range()&lt;/h5&gt;

&lt;p&gt;La fonction &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#range&quot;&gt;range&lt;/a&gt; permet de créer des listes de nombres.&lt;/p&gt;

&lt;h5 id=&quot;ajout-suppression-déléments-dune-liste&quot;&gt;Ajout, suppression d’éléments d’une liste&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;append&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;insert&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;del&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Attention à &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;remove&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;extend&lt;/code&gt; ou &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pop&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Voir la &lt;a href=&quot;https://docs.python.org/3/tutorial/datastructures.html#more-on-lists&quot;&gt;documentation du tutoriel&lt;/a&gt;.&lt;/p&gt;

&lt;h5 id=&quot;copie-dune-sous-liste&quot;&gt;Copie d’une sous-liste&lt;/h5&gt;

&lt;p&gt;On peut copier une partie d’une liste.
Pour &lt;strong&gt;copier la liste l à partir de l’indice i jusqu’à l’indice j avec un pas de k&lt;/strong&gt; par exemple : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;l[i:j:k]&lt;/code&gt;
Il n’est pas nécessaire de renseigner tous les champs.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Essayez &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;l[::3]&lt;/code&gt; ou &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;l[1::5]&lt;/code&gt; etc… (il faut bien évidemment des listes assez longues).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;les-dictionnaires&quot;&gt;Les dictionnaires&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/tutorial/datastructures.html#dictionaries&quot;&gt;https://docs.python.org/3/tutorial/datastructures.html#dictionaries&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#mapping-types-dict&quot;&gt;https://docs.python.org/3/library/stdtypes.html#mapping-types-dict&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Un dictionnaire (ou &lt;a href=&quot;http://fr.wikipedia.org/wiki/Tableau_associatif&quot;&gt;tableau associatif&lt;/a&gt;) permet d’associer des clés à des valeurs, ces clés pouvant être des chaines de caractères ou des nombres. C’est en gros comme une ‘liste’ où l’on remplace les indices par à peu près ce que l’on veut.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#on crée un dictionnaire vide
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;quarante deux&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#on associe à la clé &quot;quarante deux&quot; la valeur 42
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;pi&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#on associe à la clé 3.14 la valeur &quot;pi&quot;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;quarante deux&quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cle&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cle :&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;valeur :&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Attention&lt;/strong&gt; : Un dictionnaire n’est pas ordonné, L’ordre dans lequel les valeurs sont examniés dans une boucle for par exmple n’est pas défini.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;les-ensembles--set&quot;&gt;Les ensembles : set&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.htm#set&quot;&gt;https://docs.python.org/3/library/stdtypes.htm#set&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Un ensemble permet de garder des données en mémoire de manière non indexée. Contrairement aux listes, où l’on rangeait les éléments dans des cases distinctes, on ne peut &lt;strong&gt;pas&lt;/strong&gt; accéder aux éléments d’un ensemble &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;d&lt;/code&gt; avec &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;d[i]&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;notion-dobjets-mutables&quot;&gt;Notion d’objets mutables&lt;/h4&gt;

&lt;p&gt;Les objets que nous avons rencontrés sont mutables, c’est à dire que lorsque on crée une liste &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;l = [1, 2, 3]&lt;/code&gt;, il est toujours possible de changer la valeur d’un indice, ou d’ajouter un élément.&lt;/p&gt;

&lt;p&gt;Cela n’est toutefois pas possible avec les &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#tuples&quot;&gt;tuples&lt;/a&gt; par exemple.&lt;/p&gt;

&lt;p&gt;Un tuple peut se créer de la manière suivante :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Essayez maintenant des commandes telles que :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Cela nous renvoie alors des erreurs.&lt;/p&gt;

&lt;p&gt;Pour ajouter un élément, il faut créer un autre tuple :&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;t2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Le &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#frozenset&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;frozenset&lt;/code&gt;&lt;/a&gt; est un &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;set&lt;/code&gt; (ensemble), mais cette fois non mutable.&lt;/p&gt;

&lt;h2 id=&quot;structures-de-contrôle&quot;&gt;Structures de contrôle&lt;/h2&gt;

&lt;h3 id=&quot;comparaisons&quot;&gt;Comparaisons&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#comparisons&quot;&gt;https://docs.python.org/3/library/stdtypes.html#comparisons&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;blocs-id&quot;&gt;Blocs&lt;/h3&gt;

&lt;p&gt;On a souvent besoin de n’exécuter un certain bout de code que si une comparaison particulière est vraie (True). Ce bout de code est appelé &lt;em&gt;bloc&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Tous les blocs sont définis de la même manière :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ce qui va identifier le bloc pour son exécution (une condition, son nombre d’exécution, son nom).&lt;/li&gt;
  &lt;li&gt;Les instructions le constituant.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pour séparer les blocs les un des autres, et savoir ce qui le définit, le langage Python utilise l’indentation(4 espaces): un bloc est donc une suite d’instructions ayant la même indentation.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;A quelle heure on mange ?&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Question :&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Reponse :&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;question&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;la vie, l’univers et le reste&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;reponse_partielle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;reponse&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reponse_partielle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;je ne sais pas.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ce code contient 3 blocs : le bloc principal, puis les 2 blocs de conditions (respectivement &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;if&lt;/code&gt; et &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;else&lt;/code&gt;).&lt;/p&gt;

&lt;blockquote class=&quot;attention&quot;&gt;
  &lt;p&gt;L’indentation est  &lt;strong&gt;primordiale&lt;/strong&gt; en python.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nous allons utiliser la convention classique : chaque bloc sera indenté de 4 espaces supplémentaire par
rapport au bloc parent. Pour ne pas passer son temps à compter les espaces à ajouter pour chaque bloc,
on pourra utiliser la &lt;strong&gt;touche tabulation&lt;/strong&gt; en modifiant son fonctionnement (remplacement du caractère
tabulation par des espaces, cela est déjà prédéfini avec PyCharm) et est disponible dans tout bon éditeur.&lt;/p&gt;

&lt;p&gt;En python, toute ligne définissant un nouveau bloc doit être terminée par le caractère &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;conditions-sisinon-sisinon-ifelifelse&quot;&gt;Conditions si/sinon si/sinon (if/elif/else)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#the-if-statement&quot;&gt;https://docs.python.org/3/reference/compound_stmts.html#the-if-statement&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Exemple :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Strictement negatif&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;vaut Zero&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pair strictement positif&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;impair strictement positif&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Il est à noter que &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elif&lt;/code&gt; et &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;else&lt;/code&gt; sont optionnels.&lt;/p&gt;

&lt;h3 id=&quot;boucle-while&quot;&gt;Boucle while&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#the-while-statement&quot;&gt;https://docs.python.org/3/reference/compound_stmts.html#the-while-statement&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On peut aussi inclure des blocs dans des blocs comme le montre le programme suivant :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;b vaut 2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;boucle-for&quot;&gt;Boucle for&lt;/h3&gt;

&lt;h4 id=&quot;les-itérateurs&quot;&gt;Les itérateurs&lt;/h4&gt;

&lt;p&gt;Pour faire simple, les itérateurs sont des objets qui permettent de créer des suites de données.
Prenons un exemple connu: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;range()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;range permet de créer des itérateurs : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;range(10)&lt;/code&gt; est un itérateur qui va renvoyer les valeurs de 0 à 9.&lt;/p&gt;

&lt;p&gt;Pour utiliser &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;for&lt;/code&gt;, il faut un itérateur tel que: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;for x in mon_iterateur&lt;/code&gt; est la syntaxe.&lt;/p&gt;

&lt;p&gt;Exemple :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mon_iterateur&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mon_iterateur&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Essayez ce code et comprenez le : les itérateurs sont de puissants objets python.&lt;/p&gt;

&lt;p&gt;Vous pouvez créer votre propre itérateur à l’aide de l’instruction &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yield&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mon_iterateur&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;valeur&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;valeur&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valeur&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mon_iterateur&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ce qui va s’afficher sera:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0
5
10
15
20
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On peut également boucler sur une liste, qui est un &lt;strong&gt;objet itérable&lt;/strong&gt; :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Jet fuel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;can't&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;melt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;steel beams&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mot&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;méthodes-fonctions-et-modules&quot;&gt;Méthodes, fonctions et modules&lt;/h2&gt;

&lt;h3 id=&quot;les-fonctions&quot;&gt;Les fonctions&lt;/h3&gt;

&lt;h4 id=&quot;motivations&quot;&gt;Motivations&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#function-definitions&quot;&gt;https://docs.python.org/3/reference/compound_stmts.html#function-definitions&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Il n’est jamais bon de copier/coller un bout de programme qui se répète plusieurs fois (corriger un problème dans ce bout de code reviendrait à le corriger autant de fois qu’il a été dupliqué…). Il est de plus souvent utile de séparer les éléments logiques d’un programme en unités autonomes, ceci rend le programme plus facile à relire.&lt;/p&gt;

&lt;p&gt;Pour cela, on utilise des &lt;em&gt;fonctions&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Une fonction est un &lt;a href=&quot;#blocs-id&quot;&gt;bloc&lt;/a&gt; auquel on donne un nom (le nom de la fonction) qui peut être exécuté lorsqu’on l’invoque par son nom.&lt;/p&gt;

&lt;p&gt;La partie de programme suivant définit une fonction:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bonjour&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Salutations&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;La première ligne est la définition du bloc fonction. Il contient :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;un mot clé spécial précisant que l’on s’apprête à définir une fonction: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;def&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;le nom de la fonction. Ici &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bonjour&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;des parenthèses qui pourront contenir des paramètres (on verra ça plus tard)&lt;/li&gt;
  &lt;li&gt;le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:&lt;/code&gt; qui indique que la ligne d’après va commencer le bloc proprement dit&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ensuite vient le bloc fonction en lui-même qui ne contient qu’une seule ligne.&lt;/p&gt;

&lt;p&gt;Si on exécute le bloc précédent, il ne se passe rien. En effet on n’a fait que définir la fonction. Pour l’utiliser, ajoutez &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bonjour()&lt;/code&gt; à la suite du bloc.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Une &lt;strong&gt;fonction&lt;/strong&gt; s’utilise toujours en faisant suivre son nom d’une parenthèse contenant ses paramètres séparés par une virgule (notre fonction n’a pour l’instant pas de paramètres). Donner juste son nom ne suffit pas à l’invoquer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;paramètres-dune-fonction&quot;&gt;Paramètres d’une fonction&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;plus_moins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nombre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nombre&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Supérieur à 42&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Inférieur à 42&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Cette fonction nécessite donc un paramètre pour être invoquée. Testez alors &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plus_moins(17)&lt;/code&gt;.
La variable nombre sera associée à l’objet entier de valeur 17 dans la fonction. La variable nombre n’existe que dans la fonction.&lt;/p&gt;

&lt;blockquote class=&quot;attention&quot;&gt;
  &lt;p&gt;Les &lt;em&gt;paramètres&lt;/em&gt; d’une fonction sont des &lt;strong&gt;noms&lt;/strong&gt; de variables qui ne seront connus qu’à l’intérieur de la fonction. À l’exécution de la fonction, le nom de chaque paramètre est associé à l’objet correspondant.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;retour-dune-fonction&quot;&gt;Retour d’une fonction&lt;/h4&gt;

&lt;p&gt;Toute fonction peut rendre une valeur. On utilise le mot-clef &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;return&lt;/code&gt; suivi de la valeur à rendre pour cela. Le fonction suivante rend le double de la valeur de l’objet passé en paramètre:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;valeur&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valeur&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Il ne sert à rien de mettre des instructions après une instruction &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;return&lt;/code&gt; car dès qu’une fonction exécute cette instruction, elle s’arrête en rendant l’objet en paramètre. Le retour d’une fonction est pratique pour calculer des choses et peut ainsi être affecté à une variable.&lt;/p&gt;

&lt;p&gt;Ainsi, avec la fonction double précédemment définie, testez :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Le code précédent exécute la fonction de nom &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;double&lt;/code&gt; avec comme paramètre un entier de valeur 21. La fonction commence par associer à une variable nommée &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;valeur&lt;/code&gt; l’objet passé en paramètre (ici un entier de valeur &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;21&lt;/code&gt;), puis crée une variable de nom &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; à laquelle est associée un entier de valeur &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;42&lt;/code&gt; et enfin se termine en retournant comme valeur l’objet de nom &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt;. Les variables &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;valeur&lt;/code&gt; et &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; définies à l’intérieur de la fonction sont ensuite effacées (pas les objets, seulement les noms).&lt;/p&gt;

&lt;p&gt;Cette valeur retournée est utilisée par la commande &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print&lt;/code&gt; pour être affichée à l’écran.&lt;/p&gt;

&lt;blockquote class=&quot;attention&quot;&gt;
  &lt;p&gt;Les noms de paramètres d’une fonction et les variables déclarée à l’intérieur de la fonction n’existent qu’à l’intérieur de celle-ci. En dehors de ce blocs, ces variables n’existent plus.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;fonctions-vs-méthodes&quot;&gt;Fonctions v.s. méthodes&lt;/h4&gt;

&lt;p&gt;Python vient avec de nombreuses fonctions que l’on peut utiliser. Vous en connaissez déjà comme &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;range&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;len&lt;/code&gt;, ou encore &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;type&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ne confondez pas fonctions et méthodes. Une fonction s’exécute toute seule alors qu’une méthode a besoin d’un objet sur lequel elle s’applique (celui avant le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt;). Vous pouvez voir ça comme un 1er paramètre indispensable à l’exécution d’une méthode. Considérez le micro-programme suivant:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ma_liste&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ma_liste&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;La première ligne exécute une &lt;em&gt;fonction&lt;/em&gt; (range) avec un paramètre qui rend une liste. La seconde instruction est une &lt;em&gt;méthode&lt;/em&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;append&lt;/code&gt;) qui s’applique à l’objet de nom &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ma_liste&lt;/code&gt; et qui a un paramètre (ici un entier valant &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;10&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Le point un peu délicat est que certaines méthodes ne rendent rien et modifient l’objet sur lequel elle est appliquée, c’est le cas des méthodes &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;append&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;insert&lt;/code&gt; ou encore &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reverse&lt;/code&gt;, alors que d’autres rendent des objets, c’est le cas de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index&lt;/code&gt; par exemple.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ma_liste&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ma_liste&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;coucou&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;un_indice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ma_liste&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;coucou&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;un_indice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ma_liste&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;un_indice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;visibilité-dun-objet&quot;&gt;Visibilité d’un objet&lt;/h3&gt;

&lt;p&gt;Les noms des objets sont accessibles à l’intérieur du ‘‘bloc unitaire’’ dans lequel ils sont déclarés ainsi que dans les blocs unitaires contenus dans celui-ci. Les blocs unitaires sont :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;les fonctions,&lt;/li&gt;
  &lt;li&gt;les modules (nous verrons cela),&lt;/li&gt;
  &lt;li&gt;les classes (que nous ne verrons pas).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Les variables définies dans une fonction cachent les variables définies dans des blocs supérieurs. Ainsi,
le code suivant imprime 42 puisque la variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; déclarée dans le bloc unitaire de la fonction n’existe plus dans son bloc parent. La variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; valant 42 est masquée dans la fonction par une nouvelle variable de nom &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; valant 24.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;De la même manière, que donne le programme suivant ? :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parametre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;parametre&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parametre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote class=&quot;attention&quot;&gt;
  &lt;p&gt;Les noms déclarés dans une fonction, y compris ses paramètres, restent dans la fonction.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;récursion&quot;&gt;Récursion&lt;/h3&gt;

&lt;h4 id=&quot;modification-dobjets-dans-une-fonction&quot;&gt;Modification d’objets dans une fonction&lt;/h4&gt;

&lt;p&gt;Dans un programme récursif, on a souvent besoin de modifier le même objet plusieurs fois. Même si la fonction récursive ne rend rien. Pour cela, on doit modifier les objets passés en paramètres. Pour comprendre comment cela marche, considérez la fonction suivante :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ajoute_max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;liste_en_parametre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;maximum_liste&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;liste_en_parametre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;liste_en_parametre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maximum_liste&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Cette fonction ajoute à la fin d’une liste passée en paramètre son maximum (au passage, on a apprit une nouvelle fonction, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;max&lt;/code&gt;.
regardons le programme suivant qui utilise cette fonction :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ajoute_max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/cours_informatique/assets/tutos/bases-de-python/obj_nom.png&quot; alt=&quot;nom et objets&quot; style=&quot;margin: auto;display: block;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;La figure précédente montre ce qu’il s’est passé dans le monde des noms et des objets. Il reste un objet sans nom après l’exécution de la fonction (un entier valant 9), il est détruit. On a pu ainsi modifier un objet sans utiliser de retour de fonction. C’est une technique puissante mais à n’utiliser qu’à bon escient.&lt;/p&gt;

&lt;h3 id=&quot;modules&quot;&gt;Modules&lt;/h3&gt;

&lt;p&gt;Un &lt;em&gt;module&lt;/em&gt; (aussi appelé &lt;em&gt;bibliothèque&lt;/em&gt; ou &lt;em&gt;library&lt;/em&gt;) est un ensemble de fonctions utiles, utilisables dans de nombreux programmes. Plutôt que de refaire à chaque fois ces fonctions ou (c’est pire) de les copier/coller dans chaque programme, on les importe directement pour les utiliser.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Il existe de nombreux modules, réalisant une foultitude d’opérations. Avant de se mettre à coder quelque chose, commencez toujours par vérifier (google
est votre ami) s’il n’existe pas un module tout fait, vous gagnerez du temps. Python en fournit déjà de &lt;a href=&quot;https://docs.python.org/3/library/index.html&quot;&gt;nombreux&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pour utiliser un module, il faut commencer par l’importer avec la commande &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;import&lt;/code&gt;. Par exemple avec le module &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;math&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;importation-directe-du-module&quot;&gt;Importation directe du module&lt;/h4&gt;

&lt;p&gt;On met le nom complet avant chaque appel :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;math&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pi_sur_deux&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#PI est défini dans le module math
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pi_sur_deux&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#on utilise la fonction cosinus du module math
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;importation-dune-méthode-particulière&quot;&gt;Importation d’une méthode particulière.&lt;/h4&gt;

&lt;p&gt;Ceci peut être dangereux si des fonctions différentes possèdent le même nom.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;math&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#importation directe de cos et de pi
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;importation-de-toutes-les-fonctions-du-modules&quot;&gt;Importation de toutes les fonctions du modules&lt;/h4&gt;

&lt;p&gt;Déconseillée dans la plupart des cas car on ne sait pas vraiment ce qui a été importé.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;math&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;modules-utiles&quot;&gt;Modules utiles&lt;/h4&gt;

&lt;p&gt;De nombreux modules existent pour python et permettent de réaliser aisément de très nombreuses tâches. Pour python, si avez les droits administrateurs on pourra utiliser l’utilitaire &lt;a href=&quot;https://pypi.org/project/pip/&quot;&gt;pip&lt;/a&gt; qui est l’installeur de package python3 (attention, si vous tapez juste pip, vous installerez des module pour la version 2 de python…).&lt;/p&gt;

&lt;p&gt;Si vous n’avez pas de droits administrateur, ou pour une utilisation plus “pro” des modules, on préfèrera créer des environnements virtuels avec &lt;em&gt;virtualenv&lt;/em&gt;, mais ceci  dépasse (de peu) le cadre de notre introduction à python.&lt;/p&gt;

&lt;blockquote class=&quot;attention&quot;&gt;
  &lt;p&gt;Si vous utilisez un interpréteur qui s’appelle &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python3&lt;/code&gt; et pas &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt;, il est fort possible que le programme &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt;(sans le 3) soit un interpréteur de la version 2 de python. Il vous faut alors utiliser la commande &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip3&lt;/code&gt;et non &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip&lt;/code&gt; (qui sera elle associée à l’interpréteur &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;le-module-random&quot;&gt;Le module random&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/library/random.html&quot;&gt;https://docs.python.org/3/library/random.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Regardez &lt;a href=&quot;https://python.sdv.univ-paris-diderot.fr/08_modules/#85-module-random-generation-de-nombres-aleatoires&quot;&gt;ces exemples&lt;/a&gt; pour le module random.&lt;/p&gt;

&lt;p&gt;Installé par défaut, il permet notamment de mélanger les éléments d’une liste, générer un nombre aléatoire, choisir un élément aléatoire dans une liste… Vous pouvez même simuler une loi Gaussienne (si, si).&lt;/p&gt;

&lt;h5 id=&quot;openpyxl&quot;&gt;openpyxl&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://openpyxl.readthedocs.org&quot;&gt;http://openpyxl.readthedocs.org&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Permet de manipuler des &lt;a href=&quot;https://automatetheboringstuff.com/chapter12/&quot;&gt;fichiers excel avec python&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Il s’installe avec pip : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip install openpyxl&lt;/code&gt; (ou &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo pip3 install openpyxl&lt;/code&gt; suivi de votre mot de passe si vous êtes sous unix/mac).&lt;/p&gt;

&lt;h5 id=&quot;matplotlib&quot;&gt;matplotlib&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://matplotlib.org&quot;&gt;http://matplotlib.org&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Installé par défaut si vous utilisez l’interpréteur d’&lt;a href=&quot;https://www.anaconda.com/&quot;&gt;anaconda&lt;/a&gt;, ce module permet d’afficher des graphiques en python.&lt;/p&gt;

&lt;h5 id=&quot;jupyter&quot;&gt;Jupyter&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://jupyter.org&quot;&gt;http://jupyter.org&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Permet d’utiliser python de façon interactive (il s’installe aisément avec pip par exemple)&lt;/p&gt;

&lt;h2 id=&quot;retour-sur-les-objets&quot;&gt;Retour sur les objets&lt;/h2&gt;

&lt;p&gt;Comme on l’a vu les objets sont partout en python, qu’ils soient &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;float&lt;/code&gt;, ou même des fonctions.
Si vous avez bien compris l’exemple de la récursion et de la modification d’un objet passé en paramètre, alors vous vous demandez peut-être “pourquoi ne pas envoyer une fonction en paramètre d’une autre fonction ?”&lt;/p&gt;

&lt;p&gt;Eh bien cela est tout à fait possible, exemple:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;produit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;calcul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fonction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fonction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;calcul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;produit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#On envoie l'objet associé au nom 'produit' à la fonction 'calcul'
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ce programme affichera alors 42 ! Essayez-le pour vous en persuader.&lt;/p&gt;

&lt;h2 id=&quot;les-fichiers--lecture-écriture&quot;&gt;Les fichiers : lecture, écriture&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files&quot;&gt;https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;lecture&quot;&gt;Lecture&lt;/h3&gt;

&lt;p&gt;Pour lire le fichier ligne par ligne :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'fichier.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ligne&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ou de façon équivalente avec &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;with&lt;/code&gt;, qui est la façon recommandée  car elle délimite l’utilisation du fichier dans un bloc :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'fichier.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ligne&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On peut aussi compter le nombre de mots dans le texte, par exemple:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;nombre_mots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'fichier.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ligne&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ligne&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ligne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ligne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;nombre_mots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nombre_mots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;écriture&quot;&gt;Écriture&lt;/h3&gt;

&lt;p&gt;Pour lire-écrire, ouvrez le fichier avec ‘r+’ au lieu de ‘r’. Pour l’écriture seule, ‘w’.&lt;/p&gt;

&lt;blockquote class=&quot;attention&quot;&gt;
  &lt;p&gt;Ouvrir en écriture un fichier existant &lt;strong&gt;l’efface&lt;/strong&gt;. Pour ajouter des choses à la fin d’un fichier on utilise ‘a’ (pour append)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Utilisez ensuite la méthode &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;write()&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'fichier.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'For the night is dark and full of terrors'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Augustin Agbo-Kpati</name></author><category term="tutos" /><category term="python" /><category term="langage" /><summary type="html">Notions de base du langage python. Ce n’est cependant pas un cours, on y reprend juste les différentes notions à connaître ainsi que les principales structures de données à utiliser.</summary></entry><entry><title type="html">Tests unitaires en Python avec pytest et pycharm</title><link href="/cours_informatique/tutos/python/tests%20unitaires/2021/08/01/tests-unitaires.html" rel="alternate" type="text/html" title="Tests unitaires en Python avec pytest et pycharm" /><published>2021-08-01T00:00:00+00:00</published><updated>2021-08-01T00:00:00+00:00</updated><id>/cours_informatique/tutos/python/tests%20unitaires/2021/08/01/tests-unitaires</id><content type="html" xml:base="/cours_informatique/tutos/python/tests%20unitaires/2021/08/01/tests-unitaires.html">&lt;p&gt;Mise en œuvre de tests unitaires en python avec l’éditeur pycharm.
&lt;!--more--&gt;&lt;/p&gt;

&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Nous devons être certains que toutes les méthodes, fonctions ou modules que nous créons sont corrects. On écrira donc des tests pour être moralement sûrs que nos programmes fonctionnent (la plupart du temps une preuve de code est illusoire).&lt;/p&gt;

&lt;p&gt;Pour éviter de retaper tous ces tests à chaque modification du code (ce qui arrive souvent lorsqu’un algorithme ou une application est utilisée longtemps) ou à chaque découverte de bug, ils sont conservés dans un fichier à part. Ceci nous permettra d’exécuter ces tests à loisir (c’est à dire très souvent) et d’être sûrs que &lt;strong&gt;tous&lt;/strong&gt; les tests seront exécutés. Ces  &lt;a href=&quot;[https://fr.wikipedia.org/wiki/Test_unitaire&quot;&gt;tests sont dit unitaires&lt;/a&gt; et sont essentiels dans toutes les pratiques courantes de code.&lt;/p&gt;

&lt;p&gt;De nombreux frameworks de tests existent pour python, le plus connu étant certainement &lt;a href=&quot;https://docs.python.org/3/library/unittest.html&quot;&gt;unittest&lt;/a&gt;, ou encore &lt;a href=&quot;http://nose.readthedocs.io/en/latest/&quot;&gt;nose&lt;/a&gt;. Nous allons utiliser &lt;a href=&quot;http://pytest.org&quot;&gt;pytest&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Une très bonne introduction au développement par les tests est l’inusable Test Driven Development: By Example de Kent Beck. Tous les exemples sont en revanche en Java.&lt;/p&gt;

  &lt;p&gt;Sinon en python mais orienté développement web, il y a le bon (mais il faut s’accrocher si on débute) “Test-Driven Development with Python” de Harry J.w Percival.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;un-exemple&quot;&gt;Un exemple&lt;/h1&gt;

&lt;p&gt;Créez un nouveau projet avec pycharm que l’on pourra appeler &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;essai_tests&lt;/code&gt;, puis ajoutez-y un fichier que vous nommerez &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aide_mathematiques.py&lt;/code&gt;. Ce fichier contiendra le code suivant :&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entier&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pour tester ce code, j’imagine que si les deux conditions suivantes sont remplies :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;double(0)&lt;/code&gt; vaut &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;double (21)&lt;/code&gt; vaut &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;42&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ma méthode sera exacte.&lt;/p&gt;

&lt;p&gt;On utilise le mot clé &lt;a href=&quot;http://www.tutorialspoint.com/python/assertions_in_python.htm&quot;&gt;assert&lt;/a&gt; pour créer notre fonction de test.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Attention :&lt;/strong&gt;
Les fonctions de tests doivent toutes commencer par ‘‘test_’’.&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;Ajouter la méthode ci-après à votre fichier :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language- python&quot;&gt;
def test_double():
  assert double(0) == 0
  assert double(21) == 42

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;et exécutez là :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;n&quot;&gt;test_double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Si tout s’est passé comme prévu, il ne s’est rien passé. Normal, l’ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assert&lt;/code&gt; était vérifié. Changez un des &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assert&lt;/code&gt; de la fonction &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test_double&lt;/code&gt; pour que le résultat soit faux (par exemple &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assert double(0) == 7&lt;/code&gt;). Le programme doit maintenant s’arrêter sur une exception. Chez moi, j’obtiens ça :&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Traceback (most recent call last):
  File &quot;/Users/francois/Documents/pycharm/essai_tests/aide_mathematiques.py&quot;, line 10, in &amp;lt;module&amp;gt;
    test_double()
  File &quot;/Users/francois/Documents/pycharm/essai_tests/aide_mathematiques.py&quot;, line 6, in test_double
    assert double(0) == 7
AssertionError
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ainsi, si tout se passe bien, nos tests sont passés, si le programme s’arrête sur une exception de type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AssertionError&lt;/code&gt;, nos tests ne correspondent pas à la réalité. Nous sommes en face d’un bug (qu’il faut corriger).&lt;/p&gt;

&lt;h1 id=&quot;séparer-code-et-tests&quot;&gt;Séparer code et tests&lt;/h1&gt;

&lt;p&gt;Placez la fonction de test (et son exécution) dans un fichier que vous nommerez &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test_aide_mathematiques.py&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Faites en sorte qu’il s’exécute sans problème (attention aux &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;import&lt;/code&gt;. Vous pouvez &lt;a href=&quot;https://docs.python.org/fr/3.7/tutorial/modules.html&quot;&gt;lire la doc officielle&lt;/a&gt;,  un &lt;a href=&quot;https://www.learnpython.org/en/Modules_and_Packages&quot;&gt;petit tuto bien fait&lt;/a&gt; ou encore &lt;a href=&quot;http://sametmax.com/les-imports-en-python/&quot;&gt;le tuto de sam&amp;amp;max&lt;/a&gt; qui est un peu vieux (en particulier la partie absolue_import n’est plus du &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__future__&lt;/code&gt; mais est implémenté dans python3) mais toujours éclairant).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Attention :&lt;/strong&gt;
On séparera toujours les tests du code. Tout fichier de test commence par ‘‘test_’’.&lt;/p&gt;

&lt;/blockquote&gt;

&lt;h1 id=&quot;utilisation-de-lenvironnement-de-test-avec-pycharm&quot;&gt;Utilisation de l’environnement de test avec pycharm&lt;/h1&gt;

&lt;p&gt;Nous allons demander à l’environnement &lt;a href=&quot;http://pytest.org/latest/&quot;&gt;py.test&lt;/a&gt; d’exécuter nos tests. Il nous donnera plus d’informations sur les tests réussis ou échoués (une application normale contient des centaines de tests).&lt;/p&gt;

&lt;p&gt;Commencez par supprimer l’exécution de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test_double&lt;/code&gt; dans le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test_aide_mathematiques.py&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Attention :&lt;/strong&gt;
Un fichier de tests ne doit contenir que des fonctions.&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;Puis nous allons demander à &lt;a href=&quot;https://www.jetbrains.com/pycharm/&quot;&gt;Pycharm&lt;/a&gt; d’exécuter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test_aide_mathematiques.py&lt;/code&gt; à l’aide de notre environnement de test.&lt;/p&gt;

&lt;p&gt;Pour cela, créez un environnement d’exécution (expliqué dans ce &lt;a href=&quot;/cours_informatique/tutos/editeur/pycharm/2021/08/30/configuration-pycharm.html&quot;&gt;tuto&lt;/a&gt;) et créez une configuration  &lt;em&gt;pyhton test &amp;gt; pytest&lt;/em&gt;. Ici, les paramètres dont nous aurons besoin sont :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;le champ &lt;em&gt;name&lt;/em&gt;, qui donne un nom à notre contexte. Par exemple &lt;em&gt;“mes tests”&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;le champ &lt;em&gt;target&lt;/em&gt;, qui spécifie quel script utiliser. Cliquez tout à droite de ce champ sur un petit bouton avec &lt;em&gt;…&lt;/em&gt; puis choisissez le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test_aide_mathematiques.py&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Une fois ceci configuré, cliquez sur &lt;em&gt;OK&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Un nouvel environnement de tests est créé dans le menu &lt;em&gt;run&lt;/em&gt;. Exécutez le. Vous devriez voir une nouvelle fenêtre en bas de l’écran pycharm apparaître et vos tests s’exécuter. Si tout s’est bien passé, une barre verte doit apparaître.&lt;/p&gt;

&lt;p&gt;Pour finir cette partie :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Séparez votre fonction de tests en 2 fonctions (chaque fonction de test ne doit contenir qu’une chose à tester, donc a priori qu’un seul &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assert&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;Exécutez votre nouvel environnement.&lt;/li&gt;
  &lt;li&gt;Ajoutez une fonction de test qui plante. Exécutez votre environnement de test. Voyez la barre rouge. Supprimez ce test non valide.&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="tests unitaires" /><category term="pytest" /><category term="unittest" /><summary type="html">Mise en œuvre de tests unitaires en python avec l’éditeur pycharm.</summary></entry></feed>